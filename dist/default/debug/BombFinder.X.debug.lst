

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 11 21:42:26 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     _LATAbits	set	3977
    16  0000                     _LATB	set	3978
    17  0000                     _LATCbits	set	3979
    18  0000                     _LATDbits	set	3980
    19  0000                     _PTCON0	set	3967
    20  0000                     _PTCON1	set	3966
    21  0000                     _PTPERH	set	3962
    22  0000                     _PTPERL	set	3963
    23  0000                     _PWMCON0	set	3951
    24  0000                     _PWMCON1	set	3950
    25  0000                     _TRISAbits	set	3986
    26  0000                     _TRISBbits	set	3987
    27  0000                     _TRISC	set	3988
    28  0000                     _TRISCbits	set	3988
    29  0000                     _TRISDbits	set	3989
    30  0000                     _PDC0H	set	3960
    31  0000                     _PDC0L	set	3961
    32  0000                     _PDC1H	set	3958
    33  0000                     _PDC1L	set	3959
    34  0000                     _ADCON0	set	4034
    35  0000                     _ADCON1	set	4033
    36  0000                     _ADCON2	set	4032
    37  0000                     _ANSEL0bits	set	4024
    38  0000                     _BAUDCONbits	set	4010
    39  0000                     _IPR1bits	set	3999
    40  0000                     _OSCCON	set	4051
    41  0000                     _OSCCONbits	set	4051
    42  0000                     _PIE1bits	set	3997
    43  0000                     _PIR1bits	set	3998
    44  0000                     _RCONbits	set	4048
    45  0000                     _RCREG	set	4014
    46  0000                     _RCSTAbits	set	4011
    47  0000                     _SPBRG	set	4015
    48  0000                     _SPBRGH	set	4016
    49  0000                     _TXREG	set	4013
    50  0000                     _TXSTAbits	set	4012
    51  0000                     _INTCONbits	set	4082
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  000180                     __pcinit:
    57                           	opt stack 0
    58  000180                     start_initialization:
    59                           	opt stack 0
    60  000180                     __initialization:
    61                           	opt stack 0
    62                           
    63                           ; Clear objects allocated to COMRAM (17 bytes)
    64  000180  EE00  F024         	lfsr	0,__pbssCOMRAM
    65  000184  0E11               	movlw	17
    66  000186                     clear_0:
    67  000186  6AEE               	clrf	postinc0,c
    68  000188  06E8               	decf	wreg,f,c
    69  00018A  E1FD               	bnz	clear_0
    70  00018C                     end_of_initialization:
    71                           	opt stack 0
    72  00018C                     __end_of__initialization:
    73                           	opt stack 0
    74  00018C  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  00018E  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  000190  0100               	movlb	0
    77  000192  EF55  F000         	goto	_main	;jump to C main() function
    78                           postinc0	equ	0xFEE
    79                           wreg	equ	0xFE8
    80                           
    81                           	psect	bssCOMRAM
    82  000024                     __pbssCOMRAM:
    83                           	opt stack 0
    84  000024                     _i:
    85                           	opt stack 0
    86  000024                     	ds	1
    87  000025                     _ReceivedString:
    88                           	opt stack 0
    89  000025                     	ds	16
    90                           postinc0	equ	0xFEE
    91                           wreg	equ	0xFE8
    92                           
    93                           	psect	cstackCOMRAM
    94  000001                     __pcstackCOMRAM:
    95                           	opt stack 0
    96  000001                     ??_InterruptHandlerHigh:
    97  000001                     
    98                           ; 0 bytes @ 0x0
    99  000001                     	ds	14
   100  00000F                     VerifySignal@Signal:
   101                           	opt stack 0
   102                           
   103                           ; 2 bytes @ 0xE
   104  00000F                     	ds	2
   105  000011                     ??_main:
   106                           
   107                           ; 0 bytes @ 0x10
   108  000011                     	ds	1
   109  000012                     main@motorL:
   110                           	opt stack 0
   111                           
   112                           ; 9 bytes @ 0x11
   113  000012                     	ds	9
   114  00001B                     main@motorR:
   115                           	opt stack 0
   116                           
   117                           ; 9 bytes @ 0x1A
   118  00001B                     	ds	9
   119                           postinc0	equ	0xFEE
   120                           wreg	equ	0xFE8
   121                           
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 40 in file "main.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;  motorR          9   26[COMRAM] struct DC_motor
   132 ;;  motorL          9   17[COMRAM] struct DC_motor
   133 ;; Return value:  Size  Location     Type
   134 ;;		None               void
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   142 ;;      Params:         0       0       0       0
   143 ;;      Locals:        18       0       0       0
   144 ;;      Temps:          1       0       0       0
   145 ;;      Totals:        19       0       0       0
   146 ;;Total ram usage:       19 bytes
   147 ;; Hardware stack levels required when called:    2
   148 ;; This function calls:
   149 ;;		_VerifySignal
   150 ;;		_initPWM
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  0000AA                     __ptext0:
   158                           	opt stack 0
   159  0000AA                     _main:
   160                           	opt stack 29
   161                           
   162                           ;main.c: 42: INTCONbits.GIEH = 1;
   163                           
   164                           ;incstack = 0
   165  0000AA  8EF2               	bsf	intcon,7,c	;volatile
   166                           
   167                           ;main.c: 43: RCONbits.IPEN = 1;
   168  0000AC  8ED0               	bsf	4048,7,c	;volatile
   169                           
   170                           ;main.c: 44: INTCONbits.GIEL = 1;
   171  0000AE  8CF2               	bsf	intcon,6,c	;volatile
   172                           
   173                           ;main.c: 45: INTCONbits.INT0IE = 1;
   174  0000B0  88F2               	bsf	intcon,4,c	;volatile
   175                           
   176                           ;main.c: 47: IPR1bits.RCIP=1;
   177  0000B2  8A9F               	bsf	3999,5,c	;volatile
   178                           
   179                           ;main.c: 48: PIE1bits.RCIE=1;
   180  0000B4  8A9D               	bsf	3997,5,c	;volatile
   181                           
   182                           ;main.c: 52: struct DC_motor motorL, motorR;
   183                           ;main.c: 53: motorL.power=0;
   184  0000B6  0E00               	movlw	0
   185  0000B8  6E12               	movwf	main@motorL,c
   186                           
   187                           ;main.c: 54: motorL.direction=1;
   188  0000BA  0E01               	movlw	1
   189  0000BC  6E13               	movwf	main@motorL+1,c
   190                           
   191                           ;main.c: 55: motorL.dutyLowByte=(unsigned char *)(&PDC0L);
   192  0000BE  0E79               	movlw	121
   193  0000C0  6E14               	movwf	main@motorL+2,c
   194  0000C2  0E0F               	movlw	15
   195  0000C4  6E15               	movwf	main@motorL+3,c
   196                           
   197                           ;main.c: 56: motorL.dutyHighByte=(unsigned char *)(&PDC0H);
   198  0000C6  0E78               	movlw	120
   199  0000C8  6E16               	movwf	main@motorL+4,c
   200  0000CA  0E0F               	movlw	15
   201  0000CC  6E17               	movwf	main@motorL+5,c
   202                           
   203                           ;main.c: 57: motorL.dir_pin=0;
   204  0000CE  0E00               	movlw	0
   205  0000D0  6E18               	movwf	main@motorL+6,c
   206                           
   207                           ;main.c: 58: motorL.PWMperiod=199;
   208  0000D2  0E00               	movlw	0
   209  0000D4  6E1A               	movwf	main@motorL+8,c
   210  0000D6  0EC7               	movlw	199
   211  0000D8  6E19               	movwf	main@motorL+7,c
   212                           
   213                           ;main.c: 60: motorR.power=0;
   214  0000DA  0E00               	movlw	0
   215  0000DC  6E1B               	movwf	main@motorR,c
   216                           
   217                           ;main.c: 61: motorR.direction=1;
   218  0000DE  0E01               	movlw	1
   219  0000E0  6E1C               	movwf	main@motorR+1,c
   220                           
   221                           ;main.c: 62: motorR.dutyLowByte=(unsigned char *)(&PDC1L);
   222  0000E2  0E77               	movlw	119
   223  0000E4  6E1D               	movwf	main@motorR+2,c
   224  0000E6  0E0F               	movlw	15
   225  0000E8  6E1E               	movwf	main@motorR+3,c
   226                           
   227                           ;main.c: 63: motorR.dutyHighByte=(unsigned char *)(&PDC1H);
   228  0000EA  0E76               	movlw	118
   229  0000EC  6E1F               	movwf	main@motorR+4,c
   230  0000EE  0E0F               	movlw	15
   231  0000F0  6E20               	movwf	main@motorR+5,c
   232                           
   233                           ;main.c: 64: motorR.dir_pin=2;
   234  0000F2  0E02               	movlw	2
   235  0000F4  6E21               	movwf	main@motorR+6,c
   236                           
   237                           ;main.c: 65: motorR.PWMperiod=199;
   238  0000F6  0E00               	movlw	0
   239  0000F8  6E23               	movwf	main@motorR+8,c
   240  0000FA  0EC7               	movlw	199
   241  0000FC  6E22               	movwf	main@motorR+7,c
   242                           
   243                           ;main.c: 68: TRISBbits.RB0=0;
   244  0000FE  9093               	bcf	3987,0,c	;volatile
   245                           
   246                           ;main.c: 69: TRISBbits.RB1=0;
   247  000100  9293               	bcf	3987,1,c	;volatile
   248                           
   249                           ;main.c: 70: TRISBbits.RB2=0;
   250  000102  9493               	bcf	3987,2,c	;volatile
   251                           
   252                           ;main.c: 71: TRISBbits.RB3=0;
   253  000104  9693               	bcf	3987,3,c	;volatile
   254                           
   255                           ;main.c: 73: TRISAbits.RA3=1;
   256  000106  8692               	bsf	3986,3,c	;volatile
   257                           
   258                           ;main.c: 74: ANSEL0bits.ANS3=1;
   259  000108  86B8               	bsf	4024,3,c	;volatile
   260                           
   261                           ;main.c: 76: ADCON0=0b00001101;
   262  00010A  0E0D               	movlw	13
   263  00010C  6EC2               	movwf	4034,c	;volatile
   264                           
   265                           ;main.c: 77: ADCON1=0b00000000;
   266  00010E  0E00               	movlw	0
   267  000110  6EC1               	movwf	4033,c	;volatile
   268                           
   269                           ;main.c: 79: ADCON2=0b10101011;
   270  000112  0EAB               	movlw	171
   271  000114  6EC0               	movwf	4032,c	;volatile
   272                           
   273                           ;main.c: 81: OSCCON = 0x72;
   274  000116  0E72               	movlw	114
   275  000118  6ED3               	movwf	4051,c	;volatile
   276  00011A                     l63:
   277  00011A  A4D3               	btfss	4051,2,c	;volatile
   278  00011C  D7FE               	goto	l63
   279                           
   280                           ;main.c: 84: initPWM();
   281  00011E  ECAB  F000         	call	_initPWM	;wreg free
   282  000122                     l1104:
   283                           
   284                           ;main.c: 89: PIR1bits.RCIF=1;
   285  000122  8A9E               	bsf	3998,5,c	;volatile
   286                           
   287                           ;main.c: 115: if (ReceivedString[0]==0x02 & ReceivedString[15]==0x03){
   288  000124  0E03               	movlw	3
   289  000126  1834               	xorwf	_ReceivedString+15,w,c	;volatile
   290  000128  A4D8               	btfss	status,2,c
   291  00012A  D002               	goto	u340
   292  00012C  0E01               	movlw	1
   293  00012E  D001               	goto	u342
   294  000130                     u340:
   295  000130  0E00               	movlw	0
   296  000132                     u342:
   297  000132  6E11               	movwf	??_main& (0+255),c
   298  000134  0E02               	movlw	2
   299  000136  1825               	xorwf	_ReceivedString,w,c	;volatile
   300  000138  A4D8               	btfss	status,2,c
   301  00013A  D002               	goto	u350
   302  00013C  0E01               	movlw	1
   303  00013E  D001               	goto	u352
   304  000140                     u350:
   305  000140  0E00               	movlw	0
   306  000142                     u352:
   307  000142  1411               	andwf	??_main,w,c
   308  000144  A0E8               	btfss	wreg,0,c
   309  000146  D7ED               	goto	l1104
   310                           
   311                           ;main.c: 116: if (VerifySignal(ReceivedString)){
   312  000148  0E25               	movlw	low _ReceivedString
   313  00014A  6E0F               	movwf	VerifySignal@Signal,c
   314  00014C  0E00               	movlw	high _ReceivedString
   315  00014E  6E10               	movwf	VerifySignal@Signal+1,c
   316  000150  ECCB  F000         	call	_VerifySignal	;wreg free
   317  000154  D7E6               	goto	l1104
   318  000156                     __end_of_main:
   319                           	opt stack 0
   320                           intcon	equ	0xFF2
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _initPWM *****************
   326 ;; Defined at:
   327 ;;		line 4 in file "dc_motor.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;		None               void
   334 ;; Registers used:
   335 ;;		wreg, status,2
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   341 ;;      Params:         0       0       0       0
   342 ;;      Locals:         0       0       0       0
   343 ;;      Temps:          0       0       0       0
   344 ;;      Totals:         0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356  000156                     __ptext1:
   357                           	opt stack 0
   358  000156                     _initPWM:
   359                           	opt stack 29
   360                           
   361                           ;dc_motor.c: 6: PTCON0 = 0b00000000;
   362                           
   363                           ;incstack = 0
   364  000156  0E00               	movlw	0
   365  000158  6E7F               	movwf	3967,c	;volatile
   366                           
   367                           ;dc_motor.c: 7: PTCON1 = 0b10000000;
   368  00015A  0E80               	movlw	128
   369  00015C  6E7E               	movwf	3966,c	;volatile
   370                           
   371                           ;dc_motor.c: 8: PWMCON0 = 0b01101111;
   372  00015E  0E6F               	movlw	111
   373  000160  6E6F               	movwf	3951,c	;volatile
   374                           
   375                           ;dc_motor.c: 9: PWMCON1 = 0x00;
   376  000162  0E00               	movlw	0
   377  000164  6E6E               	movwf	3950,c	;volatile
   378                           
   379                           ;dc_motor.c: 11: PTPERL = 0b11000111;
   380  000166  0EC7               	movlw	199
   381  000168  6E7B               	movwf	3963,c	;volatile
   382                           
   383                           ;dc_motor.c: 12: PTPERH = 0b00000000;
   384  00016A  0E00               	movlw	0
   385  00016C  6E7A               	movwf	3962,c	;volatile
   386                           
   387                           ;dc_motor.c: 13: PDC0L = 0<<2;
   388  00016E  0E00               	movlw	0
   389  000170  6E79               	movwf	3961,c	;volatile
   390                           
   391                           ;dc_motor.c: 14: PDC0H = 0>>6;
   392  000172  0E00               	movlw	0
   393  000174  6E78               	movwf	3960,c	;volatile
   394                           
   395                           ;dc_motor.c: 15: PDC1L = 0<<2;
   396  000176  0E00               	movlw	0
   397  000178  6E77               	movwf	3959,c	;volatile
   398                           
   399                           ;dc_motor.c: 16: PDC1H = 0>>6;
   400  00017A  0E00               	movlw	0
   401  00017C  6E76               	movwf	3958,c	;volatile
   402  00017E  0012               	return		;funcret
   403  000180                     __end_of_initPWM:
   404                           	opt stack 0
   405                           intcon	equ	0xFF2
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           status	equ	0xFD8
   409                           
   410 ;; *************** function _VerifySignal *****************
   411 ;; Defined at:
   412 ;;		line 46 in file "RFID_Reader.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;  Signal          2   14[COMRAM] PTR unsigned char 
   415 ;;		 -> ReceivedString(16), 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      unsigned char 
   420 ;; Registers used:
   421 ;;		wreg
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   427 ;;      Params:         2       0       0       0
   428 ;;      Locals:         0       0       0       0
   429 ;;      Temps:          0       0       0       0
   430 ;;      Totals:         2       0       0       0
   431 ;;Total ram usage:        2 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; Hardware stack levels required when called:    1
   434 ;; This function calls:
   435 ;;		Nothing
   436 ;; This function is called by:
   437 ;;		_main
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text2
   442  000196                     __ptext2:
   443                           	opt stack 0
   444  000196                     _VerifySignal:
   445                           	opt stack 29
   446                           
   447                           ;RFID_Reader.c: 47: return 1;
   448                           
   449                           ;incstack = 0
   450  000196  0E01               	movlw	1
   451  000198  0012               	return	
   452  00019A                     __end_of_VerifySignal:
   453                           	opt stack 0
   454                           intcon	equ	0xFF2
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           status	equ	0xFD8
   458                           
   459 ;; *************** function _InterruptHandlerHigh *****************
   460 ;; Defined at:
   461 ;;		line 27 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   475 ;;      Params:         0       0       0       0
   476 ;;      Locals:         0       0       0       0
   477 ;;      Temps:         14       0       0       0
   478 ;;      Totals:        14       0       0       0
   479 ;;Total ram usage:       14 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		Interrupt level 2
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	intcode
   489  000008                     __pintcode:
   490                           	opt stack 0
   491  000008                     _InterruptHandlerHigh:
   492                           	opt stack 29
   493                           
   494                           ;incstack = 0
   495  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   496  00000A  CFFA F001          	movff	pclath,??_InterruptHandlerHigh
   497  00000E  CFFB F002          	movff	pclatu,??_InterruptHandlerHigh+1
   498  000012  CFE9 F003          	movff	fsr0l,??_InterruptHandlerHigh+2
   499  000016  CFEA F004          	movff	fsr0h,??_InterruptHandlerHigh+3
   500  00001A  CFE1 F005          	movff	fsr1l,??_InterruptHandlerHigh+4
   501  00001E  CFE2 F006          	movff	fsr1h,??_InterruptHandlerHigh+5
   502  000022  CFD9 F007          	movff	fsr2l,??_InterruptHandlerHigh+6
   503  000026  CFDA F008          	movff	fsr2h,??_InterruptHandlerHigh+7
   504  00002A  CFF3 F009          	movff	prodl,??_InterruptHandlerHigh+8
   505  00002E  CFF4 F00A          	movff	prodh,??_InterruptHandlerHigh+9
   506  000032  CFF6 F00B          	movff	tblptrl,??_InterruptHandlerHigh+10
   507  000036  CFF7 F00C          	movff	tblptrh,??_InterruptHandlerHigh+11
   508  00003A  CFF8 F00D          	movff	tblptru,??_InterruptHandlerHigh+12
   509  00003E  CFF5 F00E          	movff	tablat,??_InterruptHandlerHigh+13
   510                           
   511                           ;main.c: 29: if (PIR1bits.RCIF) {
   512  000042  AA9E               	btfss	3998,5,c	;volatile
   513  000044  D012               	goto	i2l60
   514                           
   515                           ;main.c: 30: ReceivedString[i]=RCREG;
   516  000046  5024               	movf	_i,w,c	;volatile
   517  000048  0D01               	mullw	1
   518  00004A  0E25               	movlw	low _ReceivedString
   519  00004C  24F3               	addwf	prodl,w,c
   520  00004E  6ED9               	movwf	fsr2l,c
   521  000050  0E00               	movlw	high _ReceivedString
   522  000052  20F4               	addwfc	prodh,w,c
   523  000054  6EDA               	movwf	fsr2h,c
   524  000056  CFAE FFDF          	movff	4014,indf2	;volatile
   525                           
   526                           ;main.c: 31: if (i==15){
   527  00005A  0E0F               	movlw	15
   528  00005C  1824               	xorwf	_i,w,c	;volatile
   529  00005E  A4D8               	btfss	status,2,c
   530  000060  D003               	goto	i2l916
   531                           
   532                           ;main.c: 32: i=0;
   533  000062  0E00               	movlw	0
   534  000064  6E24               	movwf	_i,c	;volatile
   535                           
   536                           ;main.c: 33: }else{
   537  000066  D001               	goto	i2l60
   538  000068                     i2l916:
   539                           
   540                           ;main.c: 34: i++;
   541  000068  2A24               	incf	_i,f,c	;volatile
   542  00006A                     i2l60:
   543  00006A  C00E  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
   544  00006E  C00D  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
   545  000072  C00C  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
   546  000076  C00B  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
   547  00007A  C00A  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
   548  00007E  C009  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
   549  000082  C008  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
   550  000086  C007  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
   551  00008A  C006  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
   552  00008E  C005  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
   553  000092  C004  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
   554  000096  C003  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
   555  00009A  C002  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
   556  00009E  C001  FFFA         	movff	??_InterruptHandlerHigh,pclath
   557  0000A2  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   558  0000A4  0011               	retfie		f
   559  0000A6                     __end_of_InterruptHandlerHigh:
   560                           	opt stack 0
   561  0000                     pclatu	equ	0xFFB
   562                           pclath	equ	0xFFA
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           prodh	equ	0xFF4
   568                           prodl	equ	0xFF3
   569                           intcon	equ	0xFF2
   570                           postinc0	equ	0xFEE
   571                           fsr0h	equ	0xFEA
   572                           fsr0l	equ	0xFE9
   573                           wreg	equ	0xFE8
   574                           fsr1h	equ	0xFE2
   575                           fsr1l	equ	0xFE1
   576                           indf2	equ	0xFDF
   577                           fsr2h	equ	0xFDA
   578                           fsr2l	equ	0xFD9
   579                           status	equ	0xFD8
   580                           pclatu	equ	0xFFB
   581                           pclath	equ	0xFFA
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           prodh	equ	0xFF4
   587                           prodl	equ	0xFF3
   588                           intcon	equ	0xFF2
   589                           postinc0	equ	0xFEE
   590                           fsr0h	equ	0xFEA
   591                           fsr0l	equ	0xFE9
   592                           wreg	equ	0xFE8
   593                           fsr1h	equ	0xFE2
   594                           fsr1l	equ	0xFE1
   595                           indf2	equ	0xFDF
   596                           fsr2h	equ	0xFDA
   597                           fsr2l	equ	0xFD9
   598                           status	equ	0xFD8
   599                           
   600                           	psect	rparam
   601  0000                     pclatu	equ	0xFFB
   602                           pclath	equ	0xFFA
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           prodh	equ	0xFF4
   608                           prodl	equ	0xFF3
   609                           intcon	equ	0xFF2
   610                           postinc0	equ	0xFEE
   611                           fsr0h	equ	0xFEA
   612                           fsr0l	equ	0xFE9
   613                           wreg	equ	0xFE8
   614                           fsr1h	equ	0xFE2
   615                           fsr1l	equ	0xFE1
   616                           indf2	equ	0xFDF
   617                           fsr2h	equ	0xFDA
   618                           fsr2l	equ	0xFD9
   619                           status	equ	0xFD8
   620                           
   621                           	psect	temp
   622  000035                     btemp:
   623                           	opt stack 0
   624  000035                     	ds	1
   625  0000                     int$flags	set	btemp
   626                           pclatu	equ	0xFFB
   627                           pclath	equ	0xFFA
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           prodh	equ	0xFF4
   633                           prodl	equ	0xFF3
   634                           intcon	equ	0xFF2
   635                           postinc0	equ	0xFEE
   636                           fsr0h	equ	0xFEA
   637                           fsr0l	equ	0xFE9
   638                           wreg	equ	0xFE8
   639                           fsr1h	equ	0xFE2
   640                           fsr1l	equ	0xFE1
   641                           indf2	equ	0xFDF
   642                           fsr2h	equ	0xFDA
   643                           fsr2l	equ	0xFD9
   644                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    VerifySignal@Signal	PTR unsigned char  size(2) Largest target is 16
		 -> ReceivedString(COMRAM[16]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedBack@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedBack@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    S311DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    S311DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_VerifySignal

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     306
                                             16 COMRAM    19    19      0
                       _VerifySignal
                            _initPWM
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VerifySignal                                         2     0      2      64
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptHandlerHigh                                14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _VerifySignal
   _initPWM

 _InterruptHandlerHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      34       1       55.3%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34       5        0.0%
DATA                 0      0      34      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 11 21:42:26 2018

                            _i 0024                             l63 011A                            u340 0130  
                          u350 0140                            u342 0132                            u352 0142  
                          prod 000FF3                            wreg 000FE8                           l1104 0122  
                         _LATB 000F8A                           i2l60 006A                           _main 00AA  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 0035                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 00A6  
                 ___param_bank 000010                          ?_main 0001                          _PDC0H 000F78  
                        _PDC1H 000F76                          _PDC0L 000F79                          _PDC1L 000F77  
                        i2l916 0068                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _TRISC 000F94                          _TXREG 000FAD                __end_of_initPWM 0180  
                        tablat 000FF5                          status 000FD8                __initialization 0180  
                 __end_of_main 0156                 __CFG_OSC$IRCIO 000000                         ??_main 0011  
                __activetblptr 000000                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                 __CFG_WDTEN$OFF 000000                         _OSCCON 000FD3  
                       _PTCON0 000F7F                         _PTCON1 000F7E                         _SPBRGH 000FB0  
                       _PTPERH 000F7A                         _PTPERL 000F7B                         clear_0 0186  
                    ??_initPWM 000F                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                     __accesstop 0060        __end_of__initialization 018C  
                ___rparam_used 000001                 __pcstackCOMRAM 0001  __size_of_InterruptHandlerHigh 009E  
                      _PWMCON0 000F6F                        _PWMCON1 000F6E                        __Hparam 0000  
                      __Lparam 0000                        __pcinit 0180                        __ramtop 0300  
                      __ptext0 00AA                        __ptext1 0156                        __ptext2 0196  
                      _initPWM 0156                  ?_VerifySignal 000F           end_of_initialization 018C  
                    _RCSTAbits 000FAB                        postinc0 000FEE                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISDbits 000F95  
               ??_VerifySignal 0011                      _TXSTAbits 000FAC                     main@motorL 0012  
                   main@motorR 001B                 _ReceivedString 0025                    _BAUDCONbits 000FAA  
          start_initialization 0180             VerifySignal@Signal 000F   __end_of_InterruptHandlerHigh 00A6  
                  __pbssCOMRAM 0024                      __pintcode 0008           __end_of_VerifySignal 019A  
                     ?_initPWM 0001                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
                     _PIR1bits 000F9E                       _RCONbits 000FD0           _InterruptHandlerHigh 0008  
                     __Hrparam 0000                       __Lrparam 0000                     _ANSEL0bits 000FB8  
        ?_InterruptHandlerHigh 0001               __size_of_initPWM 002A                  __size_of_main 00AC  
        __size_of_VerifySignal 0004                       int$flags 0035                     _INTCONbits 000FF2  
                 _VerifySignal 0196                       intlevel2 0000                     _OSCCONbits 000FD3  
       ??_InterruptHandlerHigh 0001  
