

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 11 21:35:19 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     _LATAbits	set	3977
    16  0000                     _LATB	set	3978
    17  0000                     _LATCbits	set	3979
    18  0000                     _LATDbits	set	3980
    19  0000                     _PTCON0	set	3967
    20  0000                     _PTCON1	set	3966
    21  0000                     _PTPERH	set	3962
    22  0000                     _PTPERL	set	3963
    23  0000                     _PWMCON0	set	3951
    24  0000                     _PWMCON1	set	3950
    25  0000                     _TRISAbits	set	3986
    26  0000                     _TRISBbits	set	3987
    27  0000                     _TRISC	set	3988
    28  0000                     _TRISCbits	set	3988
    29  0000                     _TRISDbits	set	3989
    30  0000                     _PDC0H	set	3960
    31  0000                     _PDC0L	set	3961
    32  0000                     _PDC1H	set	3958
    33  0000                     _PDC1L	set	3959
    34  0000                     _ADCON0	set	4034
    35  0000                     _ADCON1	set	4033
    36  0000                     _ADCON2	set	4032
    37  0000                     _ANSEL0bits	set	4024
    38  0000                     _BAUDCONbits	set	4010
    39  0000                     _IPR1bits	set	3999
    40  0000                     _OSCCON	set	4051
    41  0000                     _OSCCONbits	set	4051
    42  0000                     _PIE1bits	set	3997
    43  0000                     _PIR1bits	set	3998
    44  0000                     _RCONbits	set	4048
    45  0000                     _RCREG	set	4014
    46  0000                     _RCSTAbits	set	4011
    47  0000                     _SPBRG	set	4015
    48  0000                     _SPBRGH	set	4016
    49  0000                     _TXREG	set	4013
    50  0000                     _TXSTAbits	set	4012
    51  0000                     _INTCONbits	set	4082
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  00017E                     __pcinit:
    57                           	opt stack 0
    58  00017E                     start_initialization:
    59                           	opt stack 0
    60  00017E                     __initialization:
    61                           	opt stack 0
    62                           
    63                           ; Clear objects allocated to COMRAM (17 bytes)
    64  00017E  EE00  F024         	lfsr	0,__pbssCOMRAM
    65  000182  0E11               	movlw	17
    66  000184                     clear_0:
    67  000184  6AEE               	clrf	postinc0,c
    68  000186  06E8               	decf	wreg,f,c
    69  000188  E1FD               	bnz	clear_0
    70  00018A                     end_of_initialization:
    71                           	opt stack 0
    72  00018A                     __end_of__initialization:
    73                           	opt stack 0
    74  00018A  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  00018C  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  00018E  0100               	movlb	0
    77  000190  EF55  F000         	goto	_main	;jump to C main() function
    78                           postinc0	equ	0xFEE
    79                           wreg	equ	0xFE8
    80                           
    81                           	psect	bssCOMRAM
    82  000024                     __pbssCOMRAM:
    83                           	opt stack 0
    84  000024                     _i:
    85                           	opt stack 0
    86  000024                     	ds	1
    87  000025                     _ReceivedString:
    88                           	opt stack 0
    89  000025                     	ds	16
    90                           postinc0	equ	0xFEE
    91                           wreg	equ	0xFE8
    92                           
    93                           	psect	cstackCOMRAM
    94  000001                     __pcstackCOMRAM:
    95                           	opt stack 0
    96  000001                     ??_InterruptHandlerHigh:
    97  000001                     
    98                           ; 0 bytes @ 0x0
    99  000001                     	ds	14
   100  00000F                     VerifySignal@Signal:
   101                           	opt stack 0
   102                           
   103                           ; 2 bytes @ 0xE
   104  00000F                     	ds	2
   105  000011                     ??_main:
   106                           
   107                           ; 0 bytes @ 0x10
   108  000011                     	ds	1
   109  000012                     main@motorL:
   110                           	opt stack 0
   111                           
   112                           ; 9 bytes @ 0x11
   113  000012                     	ds	9
   114  00001B                     main@motorR:
   115                           	opt stack 0
   116                           
   117                           ; 9 bytes @ 0x1A
   118  00001B                     	ds	9
   119                           postinc0	equ	0xFEE
   120                           wreg	equ	0xFE8
   121                           
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 40 in file "main.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;  motorR          9   26[COMRAM] struct DC_motor
   132 ;;  motorL          9   17[COMRAM] struct DC_motor
   133 ;; Return value:  Size  Location     Type
   134 ;;		None               void
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   142 ;;      Params:         0       0       0       0
   143 ;;      Locals:        18       0       0       0
   144 ;;      Temps:          1       0       0       0
   145 ;;      Totals:        19       0       0       0
   146 ;;Total ram usage:       19 bytes
   147 ;; Hardware stack levels required when called:    2
   148 ;; This function calls:
   149 ;;		_VerifySignal
   150 ;;		_initPWM
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  0000AA                     __ptext0:
   158                           	opt stack 0
   159  0000AA                     _main:
   160                           	opt stack 29
   161                           
   162                           ;main.c: 42: INTCONbits.GIEH = 1;
   163                           
   164                           ;incstack = 0
   165  0000AA  8EF2               	bsf	intcon,7,c	;volatile
   166                           
   167                           ;main.c: 43: RCONbits.IPEN = 1;
   168  0000AC  8ED0               	bsf	4048,7,c	;volatile
   169                           
   170                           ;main.c: 44: INTCONbits.GIEL = 1;
   171  0000AE  8CF2               	bsf	intcon,6,c	;volatile
   172                           
   173                           ;main.c: 46: IPR1bits.RCIP=1;
   174  0000B0  8A9F               	bsf	3999,5,c	;volatile
   175                           
   176                           ;main.c: 47: PIE1bits.RCIE=1;
   177  0000B2  8A9D               	bsf	3997,5,c	;volatile
   178                           
   179                           ;main.c: 51: struct DC_motor motorL, motorR;
   180                           ;main.c: 52: motorL.power=0;
   181  0000B4  0E00               	movlw	0
   182  0000B6  6E12               	movwf	main@motorL,c
   183                           
   184                           ;main.c: 53: motorL.direction=1;
   185  0000B8  0E01               	movlw	1
   186  0000BA  6E13               	movwf	main@motorL+1,c
   187                           
   188                           ;main.c: 54: motorL.dutyLowByte=(unsigned char *)(&PDC0L);
   189  0000BC  0E79               	movlw	121
   190  0000BE  6E14               	movwf	main@motorL+2,c
   191  0000C0  0E0F               	movlw	15
   192  0000C2  6E15               	movwf	main@motorL+3,c
   193                           
   194                           ;main.c: 55: motorL.dutyHighByte=(unsigned char *)(&PDC0H);
   195  0000C4  0E78               	movlw	120
   196  0000C6  6E16               	movwf	main@motorL+4,c
   197  0000C8  0E0F               	movlw	15
   198  0000CA  6E17               	movwf	main@motorL+5,c
   199                           
   200                           ;main.c: 56: motorL.dir_pin=0;
   201  0000CC  0E00               	movlw	0
   202  0000CE  6E18               	movwf	main@motorL+6,c
   203                           
   204                           ;main.c: 57: motorL.PWMperiod=199;
   205  0000D0  0E00               	movlw	0
   206  0000D2  6E1A               	movwf	main@motorL+8,c
   207  0000D4  0EC7               	movlw	199
   208  0000D6  6E19               	movwf	main@motorL+7,c
   209                           
   210                           ;main.c: 59: motorR.power=0;
   211  0000D8  0E00               	movlw	0
   212  0000DA  6E1B               	movwf	main@motorR,c
   213                           
   214                           ;main.c: 60: motorR.direction=1;
   215  0000DC  0E01               	movlw	1
   216  0000DE  6E1C               	movwf	main@motorR+1,c
   217                           
   218                           ;main.c: 61: motorR.dutyLowByte=(unsigned char *)(&PDC1L);
   219  0000E0  0E77               	movlw	119
   220  0000E2  6E1D               	movwf	main@motorR+2,c
   221  0000E4  0E0F               	movlw	15
   222  0000E6  6E1E               	movwf	main@motorR+3,c
   223                           
   224                           ;main.c: 62: motorR.dutyHighByte=(unsigned char *)(&PDC1H);
   225  0000E8  0E76               	movlw	118
   226  0000EA  6E1F               	movwf	main@motorR+4,c
   227  0000EC  0E0F               	movlw	15
   228  0000EE  6E20               	movwf	main@motorR+5,c
   229                           
   230                           ;main.c: 63: motorR.dir_pin=2;
   231  0000F0  0E02               	movlw	2
   232  0000F2  6E21               	movwf	main@motorR+6,c
   233                           
   234                           ;main.c: 64: motorR.PWMperiod=199;
   235  0000F4  0E00               	movlw	0
   236  0000F6  6E23               	movwf	main@motorR+8,c
   237  0000F8  0EC7               	movlw	199
   238  0000FA  6E22               	movwf	main@motorR+7,c
   239                           
   240                           ;main.c: 67: TRISBbits.RB0=0;
   241  0000FC  9093               	bcf	3987,0,c	;volatile
   242                           
   243                           ;main.c: 68: TRISBbits.RB1=0;
   244  0000FE  9293               	bcf	3987,1,c	;volatile
   245                           
   246                           ;main.c: 69: TRISBbits.RB2=0;
   247  000100  9493               	bcf	3987,2,c	;volatile
   248                           
   249                           ;main.c: 70: TRISBbits.RB3=0;
   250  000102  9693               	bcf	3987,3,c	;volatile
   251                           
   252                           ;main.c: 72: TRISAbits.RA3=1;
   253  000104  8692               	bsf	3986,3,c	;volatile
   254                           
   255                           ;main.c: 73: ANSEL0bits.ANS3=1;
   256  000106  86B8               	bsf	4024,3,c	;volatile
   257                           
   258                           ;main.c: 75: ADCON0=0b00001101;
   259  000108  0E0D               	movlw	13
   260  00010A  6EC2               	movwf	4034,c	;volatile
   261                           
   262                           ;main.c: 76: ADCON1=0b00000000;
   263  00010C  0E00               	movlw	0
   264  00010E  6EC1               	movwf	4033,c	;volatile
   265                           
   266                           ;main.c: 78: ADCON2=0b10101011;
   267  000110  0EAB               	movlw	171
   268  000112  6EC0               	movwf	4032,c	;volatile
   269                           
   270                           ;main.c: 80: OSCCON = 0x72;
   271  000114  0E72               	movlw	114
   272  000116  6ED3               	movwf	4051,c	;volatile
   273  000118                     l63:
   274  000118  A4D3               	btfss	4051,2,c	;volatile
   275  00011A  D7FE               	goto	l63
   276                           
   277                           ;main.c: 83: initPWM();
   278  00011C  ECAA  F000         	call	_initPWM	;wreg free
   279  000120                     l1104:
   280                           
   281                           ;main.c: 88: PIR1bits.RCIF=1;
   282  000120  8A9E               	bsf	3998,5,c	;volatile
   283                           
   284                           ;main.c: 114: if (ReceivedString[0]==0x02 & ReceivedString[15]==0x03){
   285  000122  0E03               	movlw	3
   286  000124  1834               	xorwf	_ReceivedString+15,w,c	;volatile
   287  000126  A4D8               	btfss	status,2,c
   288  000128  D002               	goto	u340
   289  00012A  0E01               	movlw	1
   290  00012C  D001               	goto	u342
   291  00012E                     u340:
   292  00012E  0E00               	movlw	0
   293  000130                     u342:
   294  000130  6E11               	movwf	??_main& (0+255),c
   295  000132  0E02               	movlw	2
   296  000134  1825               	xorwf	_ReceivedString,w,c	;volatile
   297  000136  A4D8               	btfss	status,2,c
   298  000138  D002               	goto	u350
   299  00013A  0E01               	movlw	1
   300  00013C  D001               	goto	u352
   301  00013E                     u350:
   302  00013E  0E00               	movlw	0
   303  000140                     u352:
   304  000140  1411               	andwf	??_main,w,c
   305  000142  A0E8               	btfss	wreg,0,c
   306  000144  D7ED               	goto	l1104
   307                           
   308                           ;main.c: 115: if (VerifySignal(ReceivedString)){
   309  000146  0E25               	movlw	low _ReceivedString
   310  000148  6E0F               	movwf	VerifySignal@Signal,c
   311  00014A  0E00               	movlw	high _ReceivedString
   312  00014C  6E10               	movwf	VerifySignal@Signal+1,c
   313  00014E  ECCA  F000         	call	_VerifySignal	;wreg free
   314  000152  D7E6               	goto	l1104
   315  000154                     __end_of_main:
   316                           	opt stack 0
   317                           intcon	equ	0xFF2
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           status	equ	0xFD8
   321                           
   322 ;; *************** function _initPWM *****************
   323 ;; Defined at:
   324 ;;		line 4 in file "dc_motor.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;		None               void
   331 ;; Registers used:
   332 ;;		wreg, status,2
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   338 ;;      Params:         0       0       0       0
   339 ;;      Locals:         0       0       0       0
   340 ;;      Temps:          0       0       0       0
   341 ;;      Totals:         0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; Hardware stack levels required when called:    1
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text1
   353  000154                     __ptext1:
   354                           	opt stack 0
   355  000154                     _initPWM:
   356                           	opt stack 29
   357                           
   358                           ;dc_motor.c: 6: PTCON0 = 0b00000000;
   359                           
   360                           ;incstack = 0
   361  000154  0E00               	movlw	0
   362  000156  6E7F               	movwf	3967,c	;volatile
   363                           
   364                           ;dc_motor.c: 7: PTCON1 = 0b10000000;
   365  000158  0E80               	movlw	128
   366  00015A  6E7E               	movwf	3966,c	;volatile
   367                           
   368                           ;dc_motor.c: 8: PWMCON0 = 0b01101111;
   369  00015C  0E6F               	movlw	111
   370  00015E  6E6F               	movwf	3951,c	;volatile
   371                           
   372                           ;dc_motor.c: 9: PWMCON1 = 0x00;
   373  000160  0E00               	movlw	0
   374  000162  6E6E               	movwf	3950,c	;volatile
   375                           
   376                           ;dc_motor.c: 11: PTPERL = 0b11000111;
   377  000164  0EC7               	movlw	199
   378  000166  6E7B               	movwf	3963,c	;volatile
   379                           
   380                           ;dc_motor.c: 12: PTPERH = 0b00000000;
   381  000168  0E00               	movlw	0
   382  00016A  6E7A               	movwf	3962,c	;volatile
   383                           
   384                           ;dc_motor.c: 13: PDC0L = 0<<2;
   385  00016C  0E00               	movlw	0
   386  00016E  6E79               	movwf	3961,c	;volatile
   387                           
   388                           ;dc_motor.c: 14: PDC0H = 0>>6;
   389  000170  0E00               	movlw	0
   390  000172  6E78               	movwf	3960,c	;volatile
   391                           
   392                           ;dc_motor.c: 15: PDC1L = 0<<2;
   393  000174  0E00               	movlw	0
   394  000176  6E77               	movwf	3959,c	;volatile
   395                           
   396                           ;dc_motor.c: 16: PDC1H = 0>>6;
   397  000178  0E00               	movlw	0
   398  00017A  6E76               	movwf	3958,c	;volatile
   399  00017C  0012               	return		;funcret
   400  00017E                     __end_of_initPWM:
   401                           	opt stack 0
   402                           intcon	equ	0xFF2
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           status	equ	0xFD8
   406                           
   407 ;; *************** function _VerifySignal *****************
   408 ;; Defined at:
   409 ;;		line 46 in file "RFID_Reader.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  Signal          2   14[COMRAM] PTR unsigned char 
   412 ;;		 -> ReceivedString(16), 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      unsigned char 
   417 ;; Registers used:
   418 ;;		wreg
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   424 ;;      Params:         2       0       0       0
   425 ;;      Locals:         0       0       0       0
   426 ;;      Temps:          0       0       0       0
   427 ;;      Totals:         2       0       0       0
   428 ;;Total ram usage:        2 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text2
   439  000194                     __ptext2:
   440                           	opt stack 0
   441  000194                     _VerifySignal:
   442                           	opt stack 29
   443                           
   444                           ;RFID_Reader.c: 47: return 1;
   445                           
   446                           ;incstack = 0
   447  000194  0E01               	movlw	1
   448  000196  0012               	return	
   449  000198                     __end_of_VerifySignal:
   450                           	opt stack 0
   451                           intcon	equ	0xFF2
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           status	equ	0xFD8
   455                           
   456 ;; *************** function _InterruptHandlerHigh *****************
   457 ;; Defined at:
   458 ;;		line 27 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;		None               void
   465 ;; Registers used:
   466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   472 ;;      Params:         0       0       0       0
   473 ;;      Locals:         0       0       0       0
   474 ;;      Temps:         14       0       0       0
   475 ;;      Totals:        14       0       0       0
   476 ;;Total ram usage:       14 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; This function calls:
   479 ;;		Nothing
   480 ;; This function is called by:
   481 ;;		Interrupt level 2
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	intcode
   486  000008                     __pintcode:
   487                           	opt stack 0
   488  000008                     _InterruptHandlerHigh:
   489                           	opt stack 29
   490                           
   491                           ;incstack = 0
   492  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   493  00000A  CFFA F001          	movff	pclath,??_InterruptHandlerHigh
   494  00000E  CFFB F002          	movff	pclatu,??_InterruptHandlerHigh+1
   495  000012  CFE9 F003          	movff	fsr0l,??_InterruptHandlerHigh+2
   496  000016  CFEA F004          	movff	fsr0h,??_InterruptHandlerHigh+3
   497  00001A  CFE1 F005          	movff	fsr1l,??_InterruptHandlerHigh+4
   498  00001E  CFE2 F006          	movff	fsr1h,??_InterruptHandlerHigh+5
   499  000022  CFD9 F007          	movff	fsr2l,??_InterruptHandlerHigh+6
   500  000026  CFDA F008          	movff	fsr2h,??_InterruptHandlerHigh+7
   501  00002A  CFF3 F009          	movff	prodl,??_InterruptHandlerHigh+8
   502  00002E  CFF4 F00A          	movff	prodh,??_InterruptHandlerHigh+9
   503  000032  CFF6 F00B          	movff	tblptrl,??_InterruptHandlerHigh+10
   504  000036  CFF7 F00C          	movff	tblptrh,??_InterruptHandlerHigh+11
   505  00003A  CFF8 F00D          	movff	tblptru,??_InterruptHandlerHigh+12
   506  00003E  CFF5 F00E          	movff	tablat,??_InterruptHandlerHigh+13
   507                           
   508                           ;main.c: 29: if (PIR1bits.RCIF) {
   509  000042  AA9E               	btfss	3998,5,c	;volatile
   510  000044  D012               	goto	i2l60
   511                           
   512                           ;main.c: 30: ReceivedString[i]=RCREG;
   513  000046  5024               	movf	_i,w,c	;volatile
   514  000048  0D01               	mullw	1
   515  00004A  0E25               	movlw	low _ReceivedString
   516  00004C  24F3               	addwf	prodl,w,c
   517  00004E  6ED9               	movwf	fsr2l,c
   518  000050  0E00               	movlw	high _ReceivedString
   519  000052  20F4               	addwfc	prodh,w,c
   520  000054  6EDA               	movwf	fsr2h,c
   521  000056  CFAE FFDF          	movff	4014,indf2	;volatile
   522                           
   523                           ;main.c: 31: if (i==15){
   524  00005A  0E0F               	movlw	15
   525  00005C  1824               	xorwf	_i,w,c	;volatile
   526  00005E  A4D8               	btfss	status,2,c
   527  000060  D003               	goto	i2l916
   528                           
   529                           ;main.c: 32: i=0;
   530  000062  0E00               	movlw	0
   531  000064  6E24               	movwf	_i,c	;volatile
   532                           
   533                           ;main.c: 33: }else{
   534  000066  D001               	goto	i2l60
   535  000068                     i2l916:
   536                           
   537                           ;main.c: 34: i++;
   538  000068  2A24               	incf	_i,f,c	;volatile
   539  00006A                     i2l60:
   540  00006A  C00E  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
   541  00006E  C00D  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
   542  000072  C00C  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
   543  000076  C00B  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
   544  00007A  C00A  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
   545  00007E  C009  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
   546  000082  C008  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
   547  000086  C007  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
   548  00008A  C006  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
   549  00008E  C005  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
   550  000092  C004  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
   551  000096  C003  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
   552  00009A  C002  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
   553  00009E  C001  FFFA         	movff	??_InterruptHandlerHigh,pclath
   554  0000A2  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   555  0000A4  0011               	retfie		f
   556  0000A6                     __end_of_InterruptHandlerHigh:
   557                           	opt stack 0
   558  0000                     pclatu	equ	0xFFB
   559                           pclath	equ	0xFFA
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           prodh	equ	0xFF4
   565                           prodl	equ	0xFF3
   566                           intcon	equ	0xFF2
   567                           postinc0	equ	0xFEE
   568                           fsr0h	equ	0xFEA
   569                           fsr0l	equ	0xFE9
   570                           wreg	equ	0xFE8
   571                           fsr1h	equ	0xFE2
   572                           fsr1l	equ	0xFE1
   573                           indf2	equ	0xFDF
   574                           fsr2h	equ	0xFDA
   575                           fsr2l	equ	0xFD9
   576                           status	equ	0xFD8
   577                           pclatu	equ	0xFFB
   578                           pclath	equ	0xFFA
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           prodh	equ	0xFF4
   584                           prodl	equ	0xFF3
   585                           intcon	equ	0xFF2
   586                           postinc0	equ	0xFEE
   587                           fsr0h	equ	0xFEA
   588                           fsr0l	equ	0xFE9
   589                           wreg	equ	0xFE8
   590                           fsr1h	equ	0xFE2
   591                           fsr1l	equ	0xFE1
   592                           indf2	equ	0xFDF
   593                           fsr2h	equ	0xFDA
   594                           fsr2l	equ	0xFD9
   595                           status	equ	0xFD8
   596                           
   597                           	psect	rparam
   598  0000                     pclatu	equ	0xFFB
   599                           pclath	equ	0xFFA
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           prodh	equ	0xFF4
   605                           prodl	equ	0xFF3
   606                           intcon	equ	0xFF2
   607                           postinc0	equ	0xFEE
   608                           fsr0h	equ	0xFEA
   609                           fsr0l	equ	0xFE9
   610                           wreg	equ	0xFE8
   611                           fsr1h	equ	0xFE2
   612                           fsr1l	equ	0xFE1
   613                           indf2	equ	0xFDF
   614                           fsr2h	equ	0xFDA
   615                           fsr2l	equ	0xFD9
   616                           status	equ	0xFD8
   617                           
   618                           	psect	temp
   619  000035                     btemp:
   620                           	opt stack 0
   621  000035                     	ds	1
   622  0000                     int$flags	set	btemp
   623                           pclatu	equ	0xFFB
   624                           pclath	equ	0xFFA
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           prodh	equ	0xFF4
   630                           prodl	equ	0xFF3
   631                           intcon	equ	0xFF2
   632                           postinc0	equ	0xFEE
   633                           fsr0h	equ	0xFEA
   634                           fsr0l	equ	0xFE9
   635                           wreg	equ	0xFE8
   636                           fsr1h	equ	0xFE2
   637                           fsr1l	equ	0xFE1
   638                           indf2	equ	0xFDF
   639                           fsr2h	equ	0xFDA
   640                           fsr2l	equ	0xFD9
   641                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    VerifySignal@Signal	PTR unsigned char  size(2) Largest target is 16
		 -> ReceivedString(COMRAM[16]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedBack@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedBack@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    S311DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    S311DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_VerifySignal

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     306
                                             16 COMRAM    19    19      0
                       _VerifySignal
                            _initPWM
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VerifySignal                                         2     0      2      64
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptHandlerHigh                                14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _VerifySignal
   _initPWM

 _InterruptHandlerHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      34       1       55.3%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34       5        0.0%
DATA                 0      0      34      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 11 21:35:19 2018

                            _i 0024                             l63 0118                            u340 012E  
                          u350 013E                            u342 0130                            u352 0140  
                          prod 000FF3                            wreg 000FE8                           l1104 0120  
                         _LATB 000F8A                           i2l60 006A                           _main 00AA  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 0035                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 00A6  
                 ___param_bank 000010                          ?_main 0001                          _PDC0H 000F78  
                        _PDC1H 000F76                          _PDC0L 000F79                          _PDC1L 000F77  
                        i2l916 0068                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _TRISC 000F94                          _TXREG 000FAD                __end_of_initPWM 017E  
                        tablat 000FF5                          status 000FD8                __initialization 017E  
                 __end_of_main 0154                 __CFG_OSC$IRCIO 000000                         ??_main 0011  
                __activetblptr 000000                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                 __CFG_WDTEN$OFF 000000                         _OSCCON 000FD3  
                       _PTCON0 000F7F                         _PTCON1 000F7E                         _SPBRGH 000FB0  
                       _PTPERH 000F7A                         _PTPERL 000F7B                         clear_0 0184  
                    ??_initPWM 000F                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                     __accesstop 0060        __end_of__initialization 018A  
                ___rparam_used 000001                 __pcstackCOMRAM 0001  __size_of_InterruptHandlerHigh 009E  
                      _PWMCON0 000F6F                        _PWMCON1 000F6E                        __Hparam 0000  
                      __Lparam 0000                        __pcinit 017E                        __ramtop 0300  
                      __ptext0 00AA                        __ptext1 0154                        __ptext2 0194  
                      _initPWM 0154                  ?_VerifySignal 000F           end_of_initialization 018A  
                    _RCSTAbits 000FAB                        postinc0 000FEE                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISDbits 000F95  
               ??_VerifySignal 0011                      _TXSTAbits 000FAC                     main@motorL 0012  
                   main@motorR 001B                 _ReceivedString 0025                    _BAUDCONbits 000FAA  
          start_initialization 017E             VerifySignal@Signal 000F   __end_of_InterruptHandlerHigh 00A6  
                  __pbssCOMRAM 0024                      __pintcode 0008           __end_of_VerifySignal 0198  
                     ?_initPWM 0001                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
                     _PIR1bits 000F9E                       _RCONbits 000FD0           _InterruptHandlerHigh 0008  
                     __Hrparam 0000                       __Lrparam 0000                     _ANSEL0bits 000FB8  
        ?_InterruptHandlerHigh 0001               __size_of_initPWM 002A                  __size_of_main 00AA  
        __size_of_VerifySignal 0004                       int$flags 0035                     _INTCONbits 000FF2  
                 _VerifySignal 0194                       intlevel2 0000                     _OSCCONbits 000FD3  
       ??_InterruptHandlerHigh 0001  
