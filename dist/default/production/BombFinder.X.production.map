Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.35\dat\en_msgs.txt -cs \
  -h+dist/default/production\BombFinder.X.production.sym \
  --cmf=dist/default/production\BombFinder.X.production.cmf -z -Q18F4331 \
  -oC:\Users\tr514\AppData\Local\Temp\s95o.2 \
  -Mdist/default/production/BombFinder.X.production.map -E1 -ver=XC8 \
  -ASTACK=060h-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh -preset_vec=00h,intcode,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\tr514\AppData\Local\Temp\s95o.obj \
  dist/default/production\BombFinder.X.production.obj 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\tr514\AppData\Local\Temp\s95o.obj
                end_init                              0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\BombFinder.X.production.obj
                text10                             1BAE     1BAE       5C      DD7       0
                text9                              1C7A     1C7A       84      E3D       0
                text8                              1ABC     1ABC       26      D5E       0
                text7                              1D8E     1D8E      134      EC7       0
                text6                              1C0A     1C0A       70      E05       0
                text5                              1B0C     1B0C       36      D86       0
                text4                              1AE2     1AE2       2A      D71       0
                text3                              1CFE     1CFE       90      E7F       0
                text2                              1B42     1B42       36      DA1       0
                text1                              1B78     1B78       36      DBC       0
                text0                              1EC2     1EC2      13E      F61       0
                cstackCOMRAM                          1        1       32        1       1
                cinit                              1AB6     1AB6        6      D5B       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        4         0
                text10                             1BAE     1BAE       5C         0
                text9                              1C7A     1C7A       84         0
                text8                              1ABC     1ABC       26         0
                text7                              1D8E     1D8E      134         0
                text6                              1C0A     1C0A       70         0
                text5                              1B0C     1B0C       36         0
                text4                              1AE2     1AE2       2A         0
                text3                              1CFE     1CFE       90         0
                text2                              1B42     1B42       36         0
                text1                              1B78     1B78       36         0
                text0                              1EC2     1EC2      13E         0
                cinit                              1AB6     1AB6        6         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       32         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000032  000033         1       1  COMRAM  
                cinit                          001AB6  000006  001ABC       D5B       0  CODE    
                text8                          001ABC  000026  001AE2       D5E       0  CODE    
                text4                          001AE2  00002A  001B0C       D71       0  CODE    
                text5                          001B0C  000036  001B42       D86       0  CODE    
                text2                          001B42  000036  001B78       DA1       0  CODE    
                text1                          001B78  000036  001BAE       DBC       0  CODE    
                text10                         001BAE  00005C  001C0A       DD7       0  CODE    
                text6                          001C0A  000070  001C7A       E05       0  CODE    
                text9                          001C7A  000084  001CFE       E3D       0  CODE    
                text3                          001CFE  000090  001D8E       E7F       0  CODE    
                text7                          001D8E  000134  001EC2       EC7       0  CODE    
                text0                          001EC2  00013E  002000       F61       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           000033-0002FF              2CD
        CODE             000004-001AB5             1AB2
        COMRAM           000033-00005F               2D
        CONST            000004-001AB5             1AB2
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000300-001AB5             17B6
        RAM              000060-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000300-001AB5              100
        STACK            000060-0002FF              2A0

                                  Symbol Table

?___awdiv                cstackCOMRAM 000007
?___wmul                 cstackCOMRAM 000001
_ADCON0                  (abs)        000FC2
_ADCON1                  (abs)        000FC1
_ADCON2                  (abs)        000FC0
_ANSEL0bits              (abs)        000FB8
_LATB                    (abs)        000F8A
_OSCCON                  (abs)        000FD3
_OSCCONbits              (abs)        000FD3
_PDC0H                   (abs)        000F78
_PDC0L                   (abs)        000F79
_PDC1H                   (abs)        000F76
_PDC1L                   (abs)        000F77
_PTCON0                  (abs)        000F7F
_PTCON1                  (abs)        000F7E
_PTPERH                  (abs)        000F7A
_PTPERL                  (abs)        000F7B
_PWMCON0                 (abs)        000F6F
_PWMCON1                 (abs)        000F6E
_TRISAbits               (abs)        000F92
_TRISBbits               (abs)        000F93
__CFG_OSC$IRCIO          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hend_init              end_init     000004
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000000
__Hintcode               intcode      000000
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    000000
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      000000
__Hram                   ram          000000
__Hramtop                ramtop       000300
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000000
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000000
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        000033
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000000
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lend_init              end_init     000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         000000
__Lintcode               intcode      000000
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    000000
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      000000
__Lram                   ram          000000
__Lramtop                ramtop       000300
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000000
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000000
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        000033
__S2                     (abs)        000000
___awdiv                 text9        001C7A
___awdiv@counter         cstackCOMRAM 00000B
___awdiv@dividend        cstackCOMRAM 000007
___awdiv@divisor         cstackCOMRAM 000009
___awdiv@quotient        cstackCOMRAM 00000D
___awdiv@sign            cstackCOMRAM 00000C
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000010
___rparam_used           (abs)        000001
___sp                    stack        000000
___wmul                  text8        001ABC
___wmul@multiplicand     cstackCOMRAM 000003
___wmul@multiplier       cstackCOMRAM 000001
___wmul@product          cstackCOMRAM 000005
__accesstop              (abs)        000060
__activetblptr           (abs)        000000
__end_of___awdiv         text9        001CFE
__end_of___wmul          text8        001AE2
__end_of__initialization cinit        001AB6
__end_of_delay_s         text10       001C0A
__end_of_fullSpeedAhead  text6        001C7A
__end_of_fullSpeedBack   text5        001B42
__end_of_initPWM         text4        001B0C
__end_of_main            text0        002000
__end_of_setMotorPWM     text7        001EC2
__end_of_stop            text3        001D8E
__end_of_turnLeft        text2        001B78
__end_of_turnRight       text1        001BAE
__initialization         cinit        001AB6
__mediumconst            mediumconst  000000
__pcinit                 cinit        001AB6
__pcstackCOMRAM          cstackCOMRAM 000001
__ptext0                 text0        001EC2
__ptext1                 text1        001B78
__ptext10                text10       001BAE
__ptext2                 text2        001B42
__ptext3                 text3        001CFE
__ptext4                 text4        001AE2
__ptext5                 text5        001B0C
__ptext6                 text6        001C0A
__ptext7                 text7        001D8E
__ptext8                 text8        001ABC
__ptext9                 text9        001C7A
__ramtop                 ramtop       000300
__size_of___awdiv        (abs)        000000
__size_of___wmul         (abs)        000000
__size_of_delay_s        (abs)        000000
__size_of_fullSpeedAhead (abs)        000000
__size_of_fullSpeedBack  (abs)        000000
__size_of_initPWM        (abs)        000000
__size_of_main           (abs)        000000
__size_of_setMotorPWM    (abs)        000000
__size_of_stop           (abs)        000000
__size_of_turnLeft       (abs)        000000
__size_of_turnRight      (abs)        000000
__smallconst             smallconst   000000
_delay_s                 text10       001BAE
_fullSpeedAhead          text6        001C0A
_fullSpeedBack           text5        001B0C
_initPWM                 text4        001AE2
_main                    text0        001EC2
_setMotorPWM             text7        001D8E
_stop                    text3        001CFE
_turnLeft                text2        001B42
_turnRight               text1        001B78
delay_s@i                cstackCOMRAM 000004
delay_s@j                cstackCOMRAM 000006
delay_s@seconds          cstackCOMRAM 000003
end_of_initialization    cinit        001AB6
fullSpeedAhead@mL        cstackCOMRAM 000018
fullSpeedAhead@mR        cstackCOMRAM 00001A
fullSpeedBack@mL         cstackCOMRAM 00001D
fullSpeedBack@mR         cstackCOMRAM 00001F
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
main@motorL              cstackCOMRAM 000021
main@motorR              cstackCOMRAM 00002A
setMotorPWM@PWMduty      cstackCOMRAM 000016
setMotorPWM@m            cstackCOMRAM 00000F
stackhi                  (abs)        0002FF
stacklo                  (abs)        000060
start                    init         000000
start_initialization     cinit        001AB6
stop@mL                  cstackCOMRAM 000018
stop@mR                  cstackCOMRAM 00001A
turnLeft@mL              cstackCOMRAM 00001D
turnLeft@mR              cstackCOMRAM 00001F
turnRight@mL             cstackCOMRAM 00001D
turnRight@mR             cstackCOMRAM 00001F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 20 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  motorR          9   41[COMRAM] struct DC_motor
  motorL          9   32[COMRAM] struct DC_motor
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:        18       0       0       0
      Temps:          0       0       0       0
      Totals:        18       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_delay_s
		_fullSpeedAhead
		_fullSpeedBack
		_initPWM
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 89 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   28[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 80 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   28[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 61 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   23[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   25[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initPWM *****************
 Defined at:
		line 4 in file "dc_motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedBack *****************
 Defined at:
		line 115 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   28[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedAhead *****************
 Defined at:
		line 98 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   23[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   25[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
		_turnLeft
		_turnRight
		_fullSpeedBack
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 20 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  m               2   14[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), main@motorL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   21[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          5       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_fullSpeedAhead
		_setMotorFullSpeed
		_stopMotor
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMRAM] unsigned int 
  multiplicand    2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    6[COMRAM] int 
  divisor         2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[COMRAM] int 
  sign            1   11[COMRAM] unsigned char 
  counter         1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _delay_s *****************
 Defined at:
		line 10 in file "main.c"
 Parameters:    Size  Location     Type
  seconds         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  seconds         1    2[COMRAM] unsigned char 
  j               2    5[COMRAM] unsigned int 
  i               2    3[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         5       0       0       0
      Temps:          2       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c
		___awdiv       		CODE           	1C7A	0000	133

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c estimated size: 133

dc_motor.c
		_fullSpeedBack 		CODE           	1B0C	0000	55
		_fullSpeedAhead		CODE           	1C0A	0000	113
		_turnLeft      		CODE           	1B42	0000	55
		_stop          		CODE           	1CFE	0000	145
		_turnRight     		CODE           	1B78	0000	55
		_setMotorPWM   		CODE           	1D8E	0000	309
		_initPWM       		CODE           	1AE2	0000	43

dc_motor.c estimated size: 775

shared
		__initialization		CODE           	1AB6	0000	1

shared estimated size: 1

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c
		___wmul        		CODE           	1ABC	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c estimated size: 39

main.c
		_main          		CODE           	1EC2	0000	319
		_delay_s       		CODE           	1BAE	0000	93

main.c estimated size: 412

