Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.35\dat\en_msgs.txt -cs \
  -h+dist/default/production\BombFinder.X.production.sym \
  --cmf=dist/default/production\BombFinder.X.production.cmf -z -Q18F4331 \
  -oC:\Users\tr514\AppData\Local\Temp\s3ro.2 \
  -Mdist/default/production/BombFinder.X.production.map -E1 -ver=XC8 \
  -ASTACK=089h-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\tr514\AppData\Local\Temp\s3ro.obj \
  dist/default/production\BombFinder.X.production.obj 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\tr514\AppData\Local\Temp\s3ro.obj
                end_init                             A8       A8        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\BombFinder.X.production.obj
                intcode                               8        8       A0        4       0
                temp                                 4C       4C        1        1       1
                text18                              936      936       C8        4       0
                text17                              D3A      D3A       38        4       0
                text16                              B88      B88       76        4       0
                text15                              B12      B12       76        4       0
                text14                              A8E      A8E       84        4       0
                text13                              E00      E00       26        4       0
                text12                              802      802      134        4       0
                text11                              BFE      BFE       70        4       0
                text10                              9FE      9FE       90        4       0
                text9                               CB8      CB8       4A        4       0
                text8                               C6E      C6E       4A        4       0
                text7                               680      680      182        4       0
                text6                                AC       AC      424        4       0
                text5                               D02      D02       38        4       0
                text4                               DDA      DDA       26        4       0
                text3                               D72      D72       36        4       0
                text2                               E26      E26       22        4       0
                text1                               DA8      DA8       32        4       0
                text0                               4D0      4D0      1B0        4       0
                cstackCOMRAM                          1        1       3A        1       1
                cstackBANK0                          60       60       29       60       1
                bssCOMRAM                            3B       3B       11        1       1
                cinit                               E48      E48       1A        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             A8       A8        4         0
                intcode                               8        8       A0         0
                reset_vec                             0        0        4         0
                text18                              936      936       C8         0
                text17                              D3A      D3A       38         0
                text16                              B88      B88       76         0
                text15                              B12      B12       76         0
                text14                              A8E      A8E       84         0
                text13                              E00      E00       26         0
                text12                              802      802      134         0
                text11                              BFE      BFE       70         0
                text10                              9FE      9FE       90         0
                text9                               CB8      CB8       4A         0
                text8                               C6E      C6E       4A         0
                text7                               680      680      182         0
                text6                                AC       AC      424         0
                text5                               D02      D02       38         0
                text4                               DDA      DDA       26         0
                text3                               D72      D72       36         0
                text2                               E26      E26       22         0
                text1                               DA8      DA8       32         0
                text0                               4D0      4D0      1B0         0
                cinit                               E48      E48       1A         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 4C       4C        1         1
                cstackCOMRAM                          1        1       3A         1
                bssCOMRAM                            3B       3B       11         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       29         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00004C  00004D         1       1  COMRAM  
                intcode                        000008  000E5A  000E62         4       0  CODE    
                cstackBANK0                    000060  000029  000089        60       1  BANK0   
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000089-0000FF               77
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00004D-00005F               13
                         000089-0002FF              277
        CODE             000004-000007                4
                         000E62-001FFF             119E
        COMRAM           00004D-00005F               13
        CONST            000004-000007                4
                         000E62-001FFF             119E
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000E62-001FFF             119E
        RAM              000089-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000E62-001FFF              100
        STACK            000089-0002FF              277

                                  Symbol Table

?___awdiv                                  cstackCOMRAM 000015
?___wmul                                   cstackCOMRAM 00000F
?_grabLeftIR                               cstackCOMRAM 00000F
?_grabRightIR                              cstackCOMRAM 00000F
BombDirectionFound@DirectionFoundLimit     cstackCOMRAM 000016
BombDirectionFound@DirectionFoundTolerance cstackCOMRAM 000018
BombDirectionFound@SensorResult            cstackCOMRAM 00000F
ScanIR@ClearSignalTolerance                cstackCOMRAM 000035
ScanIR@SensorResult                        cstackCOMRAM 000037
ScanIR@mL                                  cstackCOMRAM 00002F
ScanIR@mR                                  cstackCOMRAM 000031
ScanWithRange@ClearSignalTolerance         cstackBANK0  000063
ScanWithRange@ResultFalseC                 cstackBANK0  000061
ScanWithRange@ResultFalseL                 cstackBANK0  000060
ScanWithRange@ResultFalseR                 cstackBANK0  000062
ScanWithRange@SensorResultC                cstackBANK0  000069
ScanWithRange@SensorResultL                cstackBANK0  000065
ScanWithRange@SensorResultR                cstackBANK0  00006D
ScanWithRange@mL                           cstackCOMRAM 00002F
ScanWithRange@mR                           cstackCOMRAM 000031
ScanWithRange@tenth_seconds                cstackCOMRAM 000033
_ANSEL0bits                                (abs)        000FB8
_BAUDCONbits                               (abs)        000FAA
_BombDirectionFound                        text18       000936
_BombDirectionFound$1381                   cstackCOMRAM 000015
_CAP1BUFH                                  (abs)        000F69
_CAP1BUFL                                  (abs)        000F68
_CAP1CON                                   (abs)        000F63
_CAP2BUFH                                  (abs)        000F67
_CAP2BUFL                                  (abs)        000F66
_CAP2CON                                   (abs)        000F62
_INTCONbits                                (abs)        000FF2
_IPR1bits                                  (abs)        000F9F
_InterruptHandlerHigh                      intcode      000008
_LATAbits                                  (abs)        000F89
_LATB                                      (abs)        000F8A
_LATCbits                                  (abs)        000F8B
_LATDbits                                  (abs)        000F8C
_LATEbits                                  (abs)        000F8D
_OSCCON                                    (abs)        000FD3
_OSCCONbits                                (abs)        000FD3
_PDC0H                                     (abs)        000F78
_PDC0L                                     (abs)        000F79
_PDC1H                                     (abs)        000F76
_PDC1L                                     (abs)        000F77
_PIE1bits                                  (abs)        000F9D
_PIR1bits                                  (abs)        000F9E
_PTCON0                                    (abs)        000F7F
_PTCON1                                    (abs)        000F7E
_PTPERH                                    (abs)        000F7A
_PTPERL                                    (abs)        000F7B
_PWMCON0                                   (abs)        000F6F
_PWMCON1                                   (abs)        000F6E
_RCONbits                                  (abs)        000FD0
_RCREG                                     (abs)        000FAE
_RCSTAbits                                 (abs)        000FAB
_ReceivedString                            bssCOMRAM    00003B
_SPBRG                                     (abs)        000FAF
_SPBRGH                                    (abs)        000FB0
_ScanIR                                    text7        000680
_ScanWithRange                             text6        0000AC
_T5CON                                     (abs)        000FB7
_TRISAbits                                 (abs)        000F92
_TRISBbits                                 (abs)        000F93
_TRISC                                     (abs)        000F94
_TRISCbits                                 (abs)        000F94
_TRISDbits                                 (abs)        000F95
_TRISEbits                                 (abs)        000F96
_TXREG                                     (abs)        000FAD
_TXSTAbits                                 (abs)        000FAC
__CFG_OSC$IRCIO                            (abs)        000000
__CFG_WDTEN$OFF                            (abs)        000000
__HRAM                                     (abs)        000000
__Habs1                                    abs1         000000
__Hbank0                                   bank0        000000
__Hbank1                                   bank1        000000
__Hbank2                                   bank2        000000
__Hbigbss                                  bigbss       000000
__Hbigdata                                 bigdata      000000
__Hbigram                                  bigram       000000
__Hbss                                     bss          000000
__HbssCOMRAM                               bssCOMRAM    000000
__Hcinit                                   cinit        000000
__Hclrtext                                 clrtext      000000
__Hcomram                                  comram       000000
__Hconfig                                  config       30000E
__Hconst                                   const        000000
__HcstackBANK0                             cstackBANK0  000000
__HcstackCOMRAM                            cstackCOMRAM 000000
__Hdata                                    data         000000
__Heeprom_data                             eeprom_data  000000
__Hend_init                                end_init     0000AC
__Hfarbss                                  farbss       000000
__Hfardata                                 fardata      000000
__Hibigdata                                ibigdata     000000
__Hidata                                   idata        000000
__Hidloc                                   idloc        200008
__Hifardata                                ifardata     000000
__Hinit                                    init         0000A8
__Hintcode                                 intcode      0000A8
__Hintcode_body                            intcode_body 000000
__Hintcodelo                               intcodelo    0000A8
__Hintentry                                intentry     000000
__Hintret                                  intret       000000
__Hintsave_regs                            intsave_regs 000000
__Hirdata                                  irdata       000000
__Hmediumconst                             mediumconst  000000
__HnvFARRAM                                nvFARRAM     000000
__Hnvbit                                   nvbit        000000
__Hnvrram                                  nvrram       000000
__Hparam                                   rparam       000000
__Hpowerup                                 powerup      0000A8
__Hram                                     ram          000000
__Hramtop                                  ramtop       000300
__Hrbit                                    rbit         000000
__Hrbss                                    rbss         000000
__Hrdata                                   rdata        000000
__Hreset_vec                               reset_vec    000004
__Hrparam                                  rparam       000000
__Hsfr                                     sfr          000000
__Hsmallconst                              smallconst   000000
__Hspace_0                                 (abs)        30000E
__Hspace_1                                 (abs)        000089
__Hspace_2                                 (abs)        000000
__Hstack                                   stack        000000
__Hstruct                                  struct       000000
__Htemp                                    temp         00004D
__Htext                                    text         000000
__Htext0                                   text0        000000
__Htext1                                   text1        000000
__Htext10                                  text10       000000
__Htext11                                  text11       000000
__Htext12                                  text12       000000
__Htext13                                  text13       000000
__Htext14                                  text14       000000
__Htext15                                  text15       000000
__Htext16                                  text16       000000
__Htext17                                  text17       000000
__Htext18                                  text18       000000
__Htext2                                   text2        000000
__Htext3                                   text3        000000
__Htext4                                   text4        000000
__Htext5                                   text5        000000
__Htext6                                   text6        000000
__Htext7                                   text7        000000
__Htext8                                   text8        000000
__Htext9                                   text9        000000
__LRAM                                     (abs)        000001
__Labs1                                    abs1         000000
__Lbank0                                   bank0        000000
__Lbank1                                   bank1        000000
__Lbank2                                   bank2        000000
__Lbigbss                                  bigbss       000000
__Lbigdata                                 bigdata      000000
__Lbigram                                  bigram       000000
__Lbss                                     bss          000000
__LbssCOMRAM                               bssCOMRAM    000000
__Lcinit                                   cinit        000000
__Lclrtext                                 clrtext      000000
__Lcomram                                  comram       000000
__Lconfig                                  config       300000
__Lconst                                   const        000000
__LcstackBANK0                             cstackBANK0  000000
__LcstackCOMRAM                            cstackCOMRAM 000000
__Ldata                                    data         000000
__Leeprom_data                             eeprom_data  000000
__Lend_init                                end_init     0000A8
__Lfarbss                                  farbss       000000
__Lfardata                                 fardata      000000
__Libigdata                                ibigdata     000000
__Lidata                                   idata        000000
__Lidloc                                   idloc        200000
__Lifardata                                ifardata     000000
__Linit                                    init         0000A8
__Lintcode                                 intcode      000008
__Lintcode_body                            intcode_body 000000
__Lintcodelo                               intcodelo    0000A8
__Lintentry                                intentry     000000
__Lintret                                  intret       000000
__Lintsave_regs                            intsave_regs 000000
__Lirdata                                  irdata       000000
__Lmediumconst                             mediumconst  000000
__LnvFARRAM                                nvFARRAM     000000
__Lnvbit                                   nvbit        000000
__Lnvrram                                  nvrram       000000
__Lparam                                   rparam       000000
__Lpowerup                                 powerup      0000A8
__Lram                                     ram          000000
__Lramtop                                  ramtop       000300
__Lrbit                                    rbit         000000
__Lrbss                                    rbss         000000
__Lrdata                                   rdata        000000
__Lreset_vec                               reset_vec    000000
__Lrparam                                  rparam       000000
__Lsfr                                     sfr          000000
__Lsmallconst                              smallconst   000000
__Lspace_0                                 (abs)        000000
__Lspace_1                                 (abs)        000000
__Lspace_2                                 (abs)        000000
__Lstack                                   stack        000000
__Lstruct                                  struct       000000
__Ltemp                                    temp         00004C
__Ltext                                    text         000000
__Ltext0                                   text0        000000
__Ltext1                                   text1        000000
__Ltext10                                  text10       000000
__Ltext11                                  text11       000000
__Ltext12                                  text12       000000
__Ltext13                                  text13       000000
__Ltext14                                  text14       000000
__Ltext15                                  text15       000000
__Ltext16                                  text16       000000
__Ltext17                                  text17       000000
__Ltext18                                  text18       000000
__Ltext2                                   text2        000000
__Ltext3                                   text3        000000
__Ltext4                                   text4        000000
__Ltext5                                   text5        000000
__Ltext6                                   text6        000000
__Ltext7                                   text7        000000
__Ltext8                                   text8        000000
__Ltext9                                   text9        000000
__S0                                       (abs)        30000E
__S1                                       (abs)        000089
__S2                                       (abs)        000000
___awdiv                                   text14       000A8E
___awdiv@counter                           cstackCOMRAM 000019
___awdiv@dividend                          cstackCOMRAM 000015
___awdiv@divisor                           cstackCOMRAM 000017
___awdiv@quotient                          cstackCOMRAM 00001B
___awdiv@sign                              cstackCOMRAM 00001A
___inthi_sp                                stack        000000
___intlo_sp                                stack        000000
___param_bank                              (abs)        000010
___rparam_used                             (abs)        000001
___sp                                      stack        000000
___wmul                                    text13       000E00
___wmul@multiplicand                       cstackCOMRAM 000011
___wmul@multiplier                         cstackCOMRAM 00000F
___wmul@product                            cstackCOMRAM 000013
__accesstop                                (abs)        000060
__activetblptr                             (abs)        000002
__end_of_BombDirectionFound                text18       0009FE
__end_of_InterruptHandlerHigh              intcode      0000A8
__end_of_ScanIR                            text7        000802
__end_of_ScanWithRange                     text6        0004D0
__end_of___awdiv                           text14       000B12
__end_of___wmul                            text13       000E26
__end_of__initialization                   cinit        000E54
__end_of_delay_s                           text5        000D3A
__end_of_delay_tenth_s                     text17       000D72
__end_of_enableSensor                      text4        000E00
__end_of_fullSpeedAhead                    text11       000C6E
__end_of_fullSpeedBack                     text3        000DA8
__end_of_grabLeftIR                        text16       000BFE
__end_of_grabRightIR                       text15       000B88
__end_of_initIR                            text2        000E48
__end_of_initMotorPWM                      text1        000DDA
__end_of_main                              text0        000680
__end_of_setMotorPWM                       text12       000936
__end_of_stop                              text10       000A8E
__end_of_turnLeft                          text9        000D02
__end_of_turnRight                         text8        000CB8
__initialization                           cinit        000E48
__mediumconst                              mediumconst  000000
__pbssCOMRAM                               bssCOMRAM    00003B
__pcinit                                   cinit        000E48
__pcstackBANK0                             cstackBANK0  000060
__pcstackCOMRAM                            cstackCOMRAM 000001
__pintcode                                 intcode      000008
__ptext0                                   text0        0004D0
__ptext1                                   text1        000DA8
__ptext10                                  text10       0009FE
__ptext11                                  text11       000BFE
__ptext12                                  text12       000802
__ptext13                                  text13       000E00
__ptext14                                  text14       000A8E
__ptext15                                  text15       000B12
__ptext16                                  text16       000B88
__ptext17                                  text17       000D3A
__ptext18                                  text18       000936
__ptext2                                   text2        000E26
__ptext3                                   text3        000D72
__ptext4                                   text4        000DDA
__ptext5                                   text5        000D02
__ptext6                                   text6        0000AC
__ptext7                                   text7        000680
__ptext8                                   text8        000C6E
__ptext9                                   text9        000CB8
__ramtop                                   ramtop       000300
__size_of_BombDirectionFound               (abs)        000000
__size_of_InterruptHandlerHigh             (abs)        000000
__size_of_ScanIR                           (abs)        000000
__size_of_ScanWithRange                    (abs)        000000
__size_of___awdiv                          (abs)        000000
__size_of___wmul                           (abs)        000000
__size_of_delay_s                          (abs)        000000
__size_of_delay_tenth_s                    (abs)        000000
__size_of_enableSensor                     (abs)        000000
__size_of_fullSpeedAhead                   (abs)        000000
__size_of_fullSpeedBack                    (abs)        000000
__size_of_grabLeftIR                       (abs)        000000
__size_of_grabRightIR                      (abs)        000000
__size_of_initIR                           (abs)        000000
__size_of_initMotorPWM                     (abs)        000000
__size_of_main                             (abs)        000000
__size_of_setMotorPWM                      (abs)        000000
__size_of_stop                             (abs)        000000
__size_of_turnLeft                         (abs)        000000
__size_of_turnRight                        (abs)        000000
__smallconst                               smallconst   000000
_delay_s                                   text5        000D02
_delay_tenth_s                             text17       000D3A
_enableSensor                              text4        000DDA
_fullSpeedAhead                            text11       000BFE
_fullSpeedBack                             text3        000D72
_grabLeftIR                                text16       000B88
_grabRightIR                               text15       000B12
_i                                         bssCOMRAM    00004B
_initIR                                    text2        000E26
_initMotorPWM                              text1        000DA8
_main                                      text0        0004D0
_setMotorPWM                               text12       000802
_stop                                      text10       0009FE
_turnLeft                                  text9        000CB8
_turnRight                                 text8        000C6E
btemp                                      temp         00004C
delay_s@i                                  cstackCOMRAM 000011
delay_s@seconds                            cstackCOMRAM 000010
delay_tenth_s@i                            cstackCOMRAM 000011
delay_tenth_s@tenth_seconds                cstackCOMRAM 000010
enableSensor@sensor                        cstackCOMRAM 000010
enableSensor@status                        cstackCOMRAM 00000F
end_of_initialization                      cinit        000E54
fullSpeedAhead@mL                          cstackCOMRAM 000026
fullSpeedAhead@mR                          cstackCOMRAM 000028
fullSpeedBack@mL                           cstackCOMRAM 00002B
fullSpeedBack@mR                           cstackCOMRAM 00002D
grabLeftIR@IR_signal                       cstackCOMRAM 000014
grabLeftIR@i                               cstackCOMRAM 000016
grabRightIR@IR_signal                      cstackCOMRAM 000014
grabRightIR@i                              cstackCOMRAM 000016
int$flags                                  temp         00004C
intlevel0                                  text         000000
intlevel1                                  text         000000
intlevel2                                  text         000000
intlevel3                                  text         000000
main@DirectionFound                        cstackBANK0  000076
main@ScanAngle                             cstackBANK0  000074
main@i                                     cstackBANK0  000073
main@mL                                    cstackBANK0  000077
main@mR                                    cstackBANK0  000080
main@mode                                  cstackBANK0  000075
main@test                                  cstackBANK0  000071
setMotorPWM@PWMduty                        cstackCOMRAM 000024
setMotorPWM@m                              cstackCOMRAM 00001D
stackhi                                    (abs)        0002FF
stacklo                                    (abs)        000089
start                                      init         0000A8
start_initialization                       cinit        000E48
stop@mL                                    cstackCOMRAM 000026
stop@mR                                    cstackCOMRAM 000028
turnLeft@mL                                cstackCOMRAM 00002B
turnLeft@mR                                cstackCOMRAM 00002D
turnRight@mL                               cstackCOMRAM 00002B
turnRight@mR                               cstackCOMRAM 00002D


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 29 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  PathTaken     100    0        unsigned char [100]
  Message        10    0        unsigned char [10]
  mR              9   32[BANK0 ] struct DC_motor
  mL              9   23[BANK0 ] struct DC_motor
  SignalStreng    3    0        unsigned char [3]
  test            2   17[BANK0 ] unsigned int 
  DirectionFou    1   22[BANK0 ] unsigned char 
  mode            1   21[BANK0 ] unsigned char 
  ScanAngle       1   20[BANK0 ] unsigned char 
  i               1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      24       0       0
      Temps:          0       0       0       0
      Totals:         0      24       0       0
Total ram usage:       24 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_ScanIR
		_ScanWithRange
		_delay_s
		_enableSensor
		_fullSpeedAhead
		_fullSpeedBack
		_initIR
		_initMotorPWM
		_stop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initMotorPWM *****************
 Defined at:
		line 4 in file "dc_motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initIR *****************
 Defined at:
		line 30 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedBack *****************
 Defined at:
		line 125 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   42[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   44[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _enableSensor *****************
 Defined at:
		line 106 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
  sensor          1    wreg     unsigned char 
  status          1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  sensor          1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _delay_s *****************
 Defined at:
		line 10 in file "Movement.c"
 Parameters:    Size  Location     Type
  seconds         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  seconds         1   15[COMRAM] unsigned char 
  i               2   16[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ScanWithRange *****************
 Defined at:
		line 89 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2   46[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   48[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
  tenth_second    1   50[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  SensorResult    4   13[BANK0 ] unsigned int [2]
  SensorResult    4    9[BANK0 ] unsigned int [2]
  SensorResult    4    5[BANK0 ] unsigned int [2]
  ClearSignalT    2    3[BANK0 ] const unsigned int 
  ResultFalseR    1    2[BANK0 ] unsigned char 
  ResultFalseC    1    1[BANK0 ] unsigned char 
  ResultFalseL    1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         0      17       0       0
      Temps:          2       0       0       0
      Totals:         7      17       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_BombDirectionFound
		___awdiv
		_delay_tenth_s
		_grabLeftIR
		_grabRightIR
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ScanIR *****************
 Defined at:
		line 32 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2   46[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   48[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
  SensorResult    4   54[COMRAM] unsigned int [2]
  ClearSignalT    2   52[COMRAM] const unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         6       0       0       0
      Temps:          2       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_BombDirectionFound
		_delay_tenth_s
		_grabLeftIR
		_grabRightIR
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 98 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   42[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   44[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_fullSpeedAhead
		_stop
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 87 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   42[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   44[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_fullSpeedAhead
		_stop
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 67 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
		_turnLeft
		_turnRight
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _fullSpeedAhead *****************
 Defined at:
		line 108 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
		_turnLeft
		_turnRight
		_fullSpeedBack
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 26 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  m               2   28[COMRAM] PTR struct DC_motor
		 -> main@mR(9), main@mL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   35[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          5       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_fullSpeedAhead
		_setMotorFullSpeed
		_stopMotor
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   14[COMRAM] unsigned int 
  multiplicand    2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   18[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   14[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   20[COMRAM] int 
  divisor         2   22[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   26[COMRAM] int 
  sign            1   25[COMRAM] unsigned char 
  counter         1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   20[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _grabRightIR *****************
 Defined at:
		line 74 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2   19[COMRAM] unsigned int 
  i               1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   14[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _grabLeftIR *****************
 Defined at:
		line 90 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2   19[COMRAM] unsigned int 
  i               1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   14[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _delay_tenth_s *****************
 Defined at:
		line 19 in file "Movement.c"
 Parameters:    Size  Location     Type
  tenth_second    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  tenth_second    1   15[COMRAM] unsigned char 
  i               2   16[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _BombDirectionFound *****************
 Defined at:
		line 210 in file "Movement.c"
 Parameters:    Size  Location     Type
  SensorResult    2   14[COMRAM] PTR unsigned int 
		 -> RAM(767), 
 Auto vars:     Size  Location     Type
  DirectionFou    2   23[COMRAM] const unsigned int 
  DirectionFou    2   21[COMRAM] const unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         5       0       0       0
      Temps:          4       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 16 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         14       0       0       0
      Totals:        14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c
		___awdiv       		CODE           	0A8E	0000	133

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c estimated size: 133

dc_motor.c
		_fullSpeedBack 		CODE           	0D72	0000	55
		_fullSpeedAhead		CODE           	0BFE	0000	113
		_turnLeft      		CODE           	0CB8	0000	75
		_stop          		CODE           	09FE	0000	145
		_turnRight     		CODE           	0C6E	0000	75
		_initMotorPWM  		CODE           	0DA8	0000	51
		_setMotorPWM   		CODE           	0802	0000	309

dc_motor.c estimated size: 823

IR_Reading.c
		_grabLeftIR    		CODE           	0B88	0000	119
		_grabRightIR   		CODE           	0B12	0000	119
		_enableSensor  		CODE           	0DDA	0000	39
		_initIR        		CODE           	0E26	0000	35

IR_Reading.c estimated size: 312

shared
		__initialization		CODE           	0E48	0000	13

shared estimated size: 13

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c
		___wmul        		CODE           	0E00	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c estimated size: 39

main.c
		_main          		CODE           	04D0	0000	433
		_InterruptHandlerHigh		CODE           	0008	0000	161

main.c estimated size: 594

Movement.c
		_BombDirectionFound		CODE           	0936	0000	201
		_ScanIR        		CODE           	0680	0000	387
		_delay_tenth_s 		CODE           	0D3A	0000	57
		_ScanWithRange 		CODE           	00AC	0000	1061
		_delay_s       		CODE           	0D02	0000	57

Movement.c estimated size: 1763

