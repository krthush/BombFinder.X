Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.35\dat\en_msgs.txt -cs \
  -h+dist/default/production\BombFinder.X.production.sym \
  --cmf=dist/default/production\BombFinder.X.production.cmf -z -Q18F4331 \
  -oC:\Users\tr514\AppData\Local\Temp\s7ps.2 \
  -Mdist/default/production/BombFinder.X.production.map -E1 -ver=XC8 \
  -ASTACK=01FAh-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo=018h,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\tr514\AppData\Local\Temp\s7ps.obj \
  dist/default/production\BombFinder.X.production.obj 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\tr514\AppData\Local\Temp\s7ps.obj
                end_init                             D6       D6        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\BombFinder.X.production.obj
                intcodelo                            18       18       BE        C       0
                intcode                               8        8        E        4       0
                temp                                 40       40        1        1       1
                smallconst                          300      300        8      180       0
                intcode_body                       1464     1464       76      184       0
                text23                             173C     173C       38      184       0
                text22                             154C     154C       72      184       0
                text21                             14DA     14DA       72      184       0
                text20                             13E0     13E0       84      184       0
                text19                             1826     1826       26      184       0
                text18                              FE6      FE6      134      184       0
                text17                             15BE     15BE       70      184       0
                text16                             1350     1350       90      184       0
                text15                             167C     167C       4E      184       0
                text14                             162E     162E       4E      184       0
                text13                              D86      D86      260      184       0
                text12                              308      308      6F6      184       0
                text11                             129C     129C       B4      184       0
                text10                             1704     1704       38      184       0
                text9                              1800     1800       26      184       0
                text8                              16CA     16CA       3A      184       0
                text7                              184C     184C       22      184       0
                text6                              188A     188A        E      184       0
                text5                              111A     111A       C6      184       0
                text4                              17A6     17A6       30      184       0
                text3                              11E0     11E0       BC      184       0
                text2                              1774     1774       32      184       0
                text1                              186E     186E       1C      184       0
                text0                               9FE      9FE      388      184       0
                cstackCOMRAM                          1        1       3D        1       1
                cstackBANK0                          60       60       1C       60       1
                cstackBANK1                         100      100       E9      100       1
                bssBANK1                            1E9      1E9       11      100       1
                bssBANK0                             7C       7C       10       60       1
                bssCOMRAM                            3E       3E        2        1       1
                cinit                              17D6     17D6       2A      184       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             D6       D6        4         0
                intcodelo                            18       18       BE         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                intcode_body                       1464     1464       76         0
                text23                             173C     173C       38         0
                text22                             154C     154C       72         0
                text21                             14DA     14DA       72         0
                text20                             13E0     13E0       84         0
                text19                             1826     1826       26         0
                text18                              FE6      FE6      134         0
                text17                             15BE     15BE       70         0
                text16                             1350     1350       90         0
                text15                             167C     167C       4E         0
                text14                             162E     162E       4E         0
                text13                              D86      D86      260         0
                text12                              308      308      6F6         0
                text11                             129C     129C       B4         0
                text10                             1704     1704       38         0
                text9                              1800     1800       26         0
                text8                              16CA     16CA       3A         0
                text7                              184C     184C       22         0
                text6                              188A     188A        E         0
                text5                              111A     111A       C6         0
                text4                              17A6     17A6       30         0
                text3                              11E0     11E0       BC         0
                text2                              1774     1774       32         0
                text1                              186E     186E       1C         0
                text0                               9FE      9FE      388         0
                cinit                              17D6     17D6       2A         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300        8         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 40       40        1         1
                cstackCOMRAM                          1        1       3D         1
                bssCOMRAM                            3E       3E        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       1C         1
                bssBANK0                             7C       7C       10         1

        CLASS   BANK1          
                cstackBANK1                         100      100       E9         1
                bssBANK1                            1E9      1E9       11         1

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000040  000041         1       1  COMRAM  
                intcode                        000008  00000E  000016         4       0  CODE    
                intcodelo                      000018  0000C2  0000DA         C       0  CODE    
                cstackBANK0                    000060  00002C  00008C        60       1  BANK0   
                cstackBANK1                    000100  0000FA  0001FA       100       1  BANK1   
                smallconst                     000300  000008  000308       180       0  SMALLCON
                text12                         000308  001590  001898       184       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00008C-0000FF               74
        BANK1            0001FA-0001FF                6
        BANK2            000200-0002FF              100
        BIGRAM           000041-00005F               1F
                         00008C-0000FF               74
                         0001FA-0002FF              106
        CODE             000004-000007                4
                         000016-000017                2
                         0000DA-0002FF              226
                         001898-001FFF              768
        COMRAM           000041-00005F               1F
        CONST            000004-000007                4
                         000016-000017                2
                         0000DA-0002FF              226
                         001898-001FFF              768
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001898-001FFF              768
        RAM              00008C-0000FF               74
                         0001FA-0002FF                6
        SFR              000F60-000FFF               A0
        SMALLCONST       001898-001FFF              100
        STACK            0001FA-0002FF              106

                                  Symbol Table

?___awdiv                        cstackCOMRAM 000026
?___wmul                         cstackCOMRAM 000020
?_grabLeftIR                     cstackCOMRAM 000020
?_grabRightIR                    cstackCOMRAM 000020
LCDout@number                    cstackCOMRAM 000023
ScanIR@F3713                     bssBANK0     00007C
ScanIR@SensorResult              cstackBANK0  000068
ScanIR@mL                        cstackBANK0  000064
ScanIR@mR                        cstackBANK0  000066
ScanWithRange@F3719              bssBANK0     000080
ScanWithRange@F3721              bssBANK0     000084
ScanWithRange@F3723              bssBANK0     000088
ScanWithRange@MoveTime           cstackBANK0  000069
ScanWithRange@ResultFalseC       cstackBANK0  00006C
ScanWithRange@ResultFalseL       cstackBANK0  00006B
ScanWithRange@ResultFalseR       cstackBANK0  00006D
ScanWithRange@SensorResultC      cstackBANK0  000072
ScanWithRange@SensorResultL      cstackBANK0  00006E
ScanWithRange@SensorResultR      cstackBANK0  000076
ScanWithRange@mL                 cstackBANK0  000064
ScanWithRange@mR                 cstackBANK0  000066
ScanWithRange@tenth_seconds      cstackBANK0  000068
SendLCD@Byte                     cstackCOMRAM 000025
SendLCD@type                     cstackCOMRAM 000024
VerifySignal@Signal              cstackCOMRAM 000020
VerifySignal@checksum            cstackCOMRAM 000028
VerifySignal@hexByte             cstackCOMRAM 000029
VerifySignal@i                   cstackCOMRAM 00002B
_ANSEL0bits                      (abs)        000FB8
_BAUDCONbits                     (abs)        000FAA
_CAP1BUFH                        (abs)        000F69
_CAP1BUFL                        (abs)        000F68
_CAP1CON                         (abs)        000F63
_CAP2BUFH                        (abs)        000F67
_CAP2BUFL                        (abs)        000F66
_CAP2CON                         (abs)        000F62
_ClearSignalThreshold            smallconst   000301
_DirectionFoundThreshold         smallconst   000303
_DirectionFoundTolerance         smallconst   000305
_E_TOG                           text6        00188A
_INTCONbits                      (abs)        000FF2
_IPR1bits                        (abs)        000F9F
_InterruptHandlerHigh            intcode      000008
_InterruptHandlerLow             intcodelo    000018
_LATAbits                        (abs)        000F89
_LATB                            (abs)        000F8A
_LATCbits                        (abs)        000F8B
_LATDbits                        (abs)        000F8C
_LATEbits                        (abs)        000F8D
_LCDout                          text5        00111A
_OSCCON                          (abs)        000FD3
_OSCCONbits                      (abs)        000FD3
_PDC0H                           (abs)        000F78
_PDC0L                           (abs)        000F79
_PDC1H                           (abs)        000F76
_PDC1L                           (abs)        000F77
_PIE1bits                        (abs)        000F9D
_PIR1bits                        (abs)        000F9E
_PTCON0                          (abs)        000F7F
_PTCON1                          (abs)        000F7E
_PTPERH                          (abs)        000F7A
_PTPERL                          (abs)        000F7B
_PWMCON0                         (abs)        000F6F
_PWMCON1                         (abs)        000F6E
_RCONbits                        (abs)        000FD0
_RCREG                           (abs)        000FAE
_RCSTAbits                       (abs)        000FAB
_RFID_Read                       bssBANK1     0001E9
_ReceivedString                  bssBANK1     0001EA
_SPBRG                           (abs)        000FAF
_SPBRGH                          (abs)        000FB0
_ScanIR                          text13       000D86
_ScanWithRange                   text12       000308
_SendLCD                         text4        0017A6
_T5CON                           (abs)        000FB7
_TRISAbits                       (abs)        000F92
_TRISBbits                       (abs)        000F93
_TRISC                           (abs)        000F94
_TRISCbits                       (abs)        000F94
_TRISDbits                       (abs)        000F95
_TRISEbits                       (abs)        000F96
_TXREG                           (abs)        000FAD
_TXSTAbits                       (abs)        000FAC
_VerifySignal                    text11       00129C
__CFG_OSC$IRCIO                  (abs)        000000
__CFG_WDTEN$OFF                  (abs)        000000
__HRAM                           (abs)        000000
__Habs1                          abs1         000000
__Hbank0                         bank0        000000
__Hbank1                         bank1        000000
__Hbank2                         bank2        000000
__Hbigbss                        bigbss       000000
__Hbigdata                       bigdata      000000
__Hbigram                        bigram       000000
__Hbss                           bss          000000
__HbssBANK0                      bssBANK0     000000
__HbssBANK1                      bssBANK1     000000
__HbssCOMRAM                     bssCOMRAM    000000
__Hcinit                         cinit        000000
__Hclrtext                       clrtext      000000
__Hcomram                        comram       000000
__Hconfig                        config       30000E
__Hconst                         const        000000
__HcstackBANK0                   cstackBANK0  000000
__HcstackBANK1                   cstackBANK1  000000
__HcstackCOMRAM                  cstackCOMRAM 000000
__Hdata                          data         000000
__Heeprom_data                   eeprom_data  000000
__Hend_init                      end_init     0000DA
__Hfarbss                        farbss       000000
__Hfardata                       fardata      000000
__Hibigdata                      ibigdata     000000
__Hidata                         idata        000000
__Hidloc                         idloc        200008
__Hifardata                      ifardata     000000
__Hinit                          init         0000D6
__Hintcode                       intcode      000016
__Hintcode_body                  intcode_body 000000
__Hintcodelo                     intcodelo    0000D6
__Hintentry                      intentry     000000
__Hintret                        intret       000000
__Hintsave_regs                  intsave_regs 000000
__Hirdata                        irdata       000000
__Hmediumconst                   mediumconst  000000
__HnvFARRAM                      nvFARRAM     000000
__Hnvbit                         nvbit        000000
__Hnvrram                        nvrram       000000
__Hparam                         rparam       000000
__Hpowerup                       powerup      0000D6
__Hram                           ram          000000
__Hramtop                        ramtop       000300
__Hrbit                          rbit         000000
__Hrbss                          rbss         000000
__Hrdata                         rdata        000000
__Hreset_vec                     reset_vec    000004
__Hrparam                        rparam       000000
__Hsfr                           sfr          000000
__Hsmallconst                    smallconst   000308
__Hspace_0                       (abs)        30000E
__Hspace_1                       (abs)        0001FA
__Hspace_2                       (abs)        000000
__Hstack                         stack        000000
__Hstruct                        struct       000000
__Htemp                          temp         000041
__Htext                          text         000000
__Htext0                         text0        000000
__Htext1                         text1        000000
__Htext10                        text10       000000
__Htext11                        text11       000000
__Htext12                        text12       000000
__Htext13                        text13       000000
__Htext14                        text14       000000
__Htext15                        text15       000000
__Htext16                        text16       000000
__Htext17                        text17       000000
__Htext18                        text18       000000
__Htext19                        text19       000000
__Htext2                         text2        000000
__Htext20                        text20       000000
__Htext21                        text21       000000
__Htext22                        text22       000000
__Htext23                        text23       000000
__Htext3                         text3        000000
__Htext4                         text4        000000
__Htext5                         text5        000000
__Htext6                         text6        000000
__Htext7                         text7        000000
__Htext8                         text8        000000
__Htext9                         text9        000000
__LRAM                           (abs)        000001
__Labs1                          abs1         000000
__Lbank0                         bank0        000000
__Lbank1                         bank1        000000
__Lbank2                         bank2        000000
__Lbigbss                        bigbss       000000
__Lbigdata                       bigdata      000000
__Lbigram                        bigram       000000
__Lbss                           bss          000000
__LbssBANK0                      bssBANK0     000000
__LbssBANK1                      bssBANK1     000000
__LbssCOMRAM                     bssCOMRAM    000000
__Lcinit                         cinit        000000
__Lclrtext                       clrtext      000000
__Lcomram                        comram       000000
__Lconfig                        config       300000
__Lconst                         const        000000
__LcstackBANK0                   cstackBANK0  000000
__LcstackBANK1                   cstackBANK1  000000
__LcstackCOMRAM                  cstackCOMRAM 000000
__Ldata                          data         000000
__Leeprom_data                   eeprom_data  000000
__Lend_init                      end_init     0000D6
__Lfarbss                        farbss       000000
__Lfardata                       fardata      000000
__Libigdata                      ibigdata     000000
__Lidata                         idata        000000
__Lidloc                         idloc        200000
__Lifardata                      ifardata     000000
__Linit                          init         0000D6
__Lintcode                       intcode      000008
__Lintcode_body                  intcode_body 000000
__Lintcodelo                     intcodelo    000018
__Lintentry                      intentry     000000
__Lintret                        intret       000000
__Lintsave_regs                  intsave_regs 000000
__Lirdata                        irdata       000000
__Lmediumconst                   mediumconst  000000
__LnvFARRAM                      nvFARRAM     000000
__Lnvbit                         nvbit        000000
__Lnvrram                        nvrram       000000
__Lparam                         rparam       000000
__Lpowerup                       powerup      0000D6
__Lram                           ram          000000
__Lramtop                        ramtop       000300
__Lrbit                          rbit         000000
__Lrbss                          rbss         000000
__Lrdata                         rdata        000000
__Lreset_vec                     reset_vec    000000
__Lrparam                        rparam       000000
__Lsfr                           sfr          000000
__Lsmallconst                    smallconst   000300
__Lspace_0                       (abs)        000000
__Lspace_1                       (abs)        000000
__Lspace_2                       (abs)        000000
__Lstack                         stack        000000
__Lstruct                        struct       000000
__Ltemp                          temp         000040
__Ltext                          text         000000
__Ltext0                         text0        000000
__Ltext1                         text1        000000
__Ltext10                        text10       000000
__Ltext11                        text11       000000
__Ltext12                        text12       000000
__Ltext13                        text13       000000
__Ltext14                        text14       000000
__Ltext15                        text15       000000
__Ltext16                        text16       000000
__Ltext17                        text17       000000
__Ltext18                        text18       000000
__Ltext19                        text19       000000
__Ltext2                         text2        000000
__Ltext20                        text20       000000
__Ltext21                        text21       000000
__Ltext22                        text22       000000
__Ltext23                        text23       000000
__Ltext3                         text3        000000
__Ltext4                         text4        000000
__Ltext5                         text5        000000
__Ltext6                         text6        000000
__Ltext7                         text7        000000
__Ltext8                         text8        000000
__Ltext9                         text9        000000
__S0                             (abs)        30000E
__S1                             (abs)        0001FA
__S2                             (abs)        000000
___awdiv                         text20       0013E0
___awdiv@counter                 cstackCOMRAM 00002A
___awdiv@dividend                cstackCOMRAM 000026
___awdiv@divisor                 cstackCOMRAM 000028
___awdiv@quotient                cstackCOMRAM 00002C
___awdiv@sign                    cstackCOMRAM 00002B
___inthi_sp                      stack        000000
___intlo_sp                      stack        000000
___param_bank                    (abs)        000010
___rparam_used                   (abs)        000001
___sp                            stack        000000
___wmul                          text19       001826
___wmul@multiplicand             cstackCOMRAM 000022
___wmul@multiplier               cstackCOMRAM 000020
___wmul@product                  cstackCOMRAM 000024
__accesstop                      (abs)        000060
__activetblptr                   (abs)        000002
__end_of_ClearSignalThreshold    smallconst   000303
__end_of_DirectionFoundThreshold smallconst   000305
__end_of_DirectionFoundTolerance smallconst   000307
__end_of_E_TOG                   text6        001898
__end_of_InterruptHandlerHigh    intcode_body 0014DA
__end_of_InterruptHandlerLow     intcodelo    0000D6
__end_of_LCDout                  text5        0011E0
__end_of_ScanIR                  text13       000FE6
__end_of_ScanWithRange           text12       0009FE
__end_of_SendLCD                 text4        0017D6
__end_of_VerifySignal            text11       001350
__end_of___awdiv                 text20       001464
__end_of___wmul                  text19       00184C
__end_of__initialization         cinit        0017F2
__end_of_delay_s                 text10       00173C
__end_of_delay_tenth_s           text23       001774
__end_of_enableSensor            text9        001826
__end_of_fullSpeedAhead          text17       00162E
__end_of_fullSpeedBack           text8        001704
__end_of_grabLeftIR              text22       0015BE
__end_of_grabRightIR             text21       00154C
__end_of_initIR                  text7        00186E
__end_of_initLCD                 text3        00129C
__end_of_initMotorPWM            text2        0017A6
__end_of_initRFID                text1        00188A
__end_of_main                    text0        000D86
__end_of_setMotorPWM             text18       00111A
__end_of_stop                    text16       0013E0
__end_of_turnLeft                text15       0016CA
__end_of_turnRight               text14       00167C
__initialization                 cinit        0017D6
__mediumconst                    mediumconst  000000
__pbssBANK0                      bssBANK0     00007C
__pbssBANK1                      bssBANK1     0001E9
__pbssCOMRAM                     bssCOMRAM    00003E
__pcinit                         cinit        0017D6
__pcstackBANK0                   cstackBANK0  000060
__pcstackBANK1                   cstackBANK1  000100
__pcstackCOMRAM                  cstackCOMRAM 000001
__pintcode                       intcode      000008
__pintcode_body                  intcode_body 001464
__pintcodelo                     intcodelo    000018
__psmallconst                    smallconst   000300
__ptext0                         text0        0009FE
__ptext1                         text1        00186E
__ptext10                        text10       001704
__ptext11                        text11       00129C
__ptext12                        text12       000308
__ptext13                        text13       000D86
__ptext14                        text14       00162E
__ptext15                        text15       00167C
__ptext16                        text16       001350
__ptext17                        text17       0015BE
__ptext18                        text18       000FE6
__ptext19                        text19       001826
__ptext2                         text2        001774
__ptext20                        text20       0013E0
__ptext21                        text21       0014DA
__ptext22                        text22       00154C
__ptext23                        text23       00173C
__ptext3                         text3        0011E0
__ptext4                         text4        0017A6
__ptext5                         text5        00111A
__ptext6                         text6        00188A
__ptext7                         text7        00184C
__ptext8                         text8        0016CA
__ptext9                         text9        001800
__ramtop                         ramtop       000300
__size_of_E_TOG                  (abs)        000000
__size_of_InterruptHandlerHigh   (abs)        000000
__size_of_InterruptHandlerLow    (abs)        000000
__size_of_LCDout                 (abs)        000000
__size_of_ScanIR                 (abs)        000000
__size_of_ScanWithRange          (abs)        000000
__size_of_SendLCD                (abs)        000000
__size_of_VerifySignal           (abs)        000000
__size_of___awdiv                (abs)        000000
__size_of___wmul                 (abs)        000000
__size_of_delay_s                (abs)        000000
__size_of_delay_tenth_s          (abs)        000000
__size_of_enableSensor           (abs)        000000
__size_of_fullSpeedAhead         (abs)        000000
__size_of_fullSpeedBack          (abs)        000000
__size_of_grabLeftIR             (abs)        000000
__size_of_grabRightIR            (abs)        000000
__size_of_initIR                 (abs)        000000
__size_of_initLCD                (abs)        000000
__size_of_initMotorPWM           (abs)        000000
__size_of_initRFID               (abs)        000000
__size_of_main                   (abs)        000000
__size_of_setMotorPWM            (abs)        000000
__size_of_stop                   (abs)        000000
__size_of_turnLeft               (abs)        000000
__size_of_turnRight              (abs)        000000
__smallconst                     smallconst   000300
_delay_s                         text10       001704
_delay_tenth_s                   text23       00173C
_enableSensor                    text9        001800
_fullSpeedAhead                  text17       0015BE
_fullSpeedBack                   text8        0016CA
_grabLeftIR                      text22       00154C
_grabRightIR                     text21       0014DA
_i                               bssCOMRAM    00003E
_initIR                          text7        00184C
_initLCD                         text3        0011E0
_initMotorPWM                    text2        001774
_initRFID                        text1        00186E
_main                            text0        0009FE
_setMotorPWM                     text18       000FE6
_start                           bssCOMRAM    00003F
_stop                            text16       001350
_turnLeft                        text15       00167C
_turnRight                       text14       00162E
btemp                            temp         000040
delay_s@i                        cstackCOMRAM 000022
delay_s@seconds                  cstackCOMRAM 000021
delay_tenth_s@i                  cstackCOMRAM 000022
delay_tenth_s@tenth_seconds      cstackCOMRAM 000021
enableSensor@sensor              cstackCOMRAM 000021
enableSensor@status              cstackCOMRAM 000020
end_of_initialization            cinit        0017F2
fullSpeedAhead@mL                cstackCOMRAM 000037
fullSpeedAhead@mR                cstackCOMRAM 000039
fullSpeedBack@mL                 cstackBANK0  000060
fullSpeedBack@mR                 cstackBANK0  000062
grabLeftIR@IR_signal             cstackCOMRAM 000025
grabLeftIR@i                     cstackCOMRAM 000027
grabRightIR@IR_signal            cstackCOMRAM 000025
grabRightIR@i                    cstackCOMRAM 000027
int$flags                        temp         000040
int_func                         intcode_body 001464
intlevel0                        text         000000
intlevel1                        text         000000
intlevel2                        text         000000
intlevel3                        text         000000
main@DirectionFound              cstackBANK1  0001D5
main@Message                     cstackBANK1  0001C8
main@Move                        cstackBANK1  0001D4
main@MoveTime                    cstackBANK1  000164
main@MoveType                    cstackBANK1  000100
main@ScanAngle                   cstackBANK1  0001D2
main@i                           cstackBANK1  0001D6
main@mL                          cstackBANK1  0001D7
main@mR                          cstackBANK1  0001E0
main@mode                        cstackBANK1  0001D3
setMotorPWM@PWMduty              cstackCOMRAM 000035
setMotorPWM@m                    cstackCOMRAM 00002E
stackhi                          (abs)        0002FF
stacklo                          (abs)        0001FA
start                            init         0000D6
start_initialization             cinit        0017D6
stop@mL                          cstackCOMRAM 000037
stop@mR                          cstackCOMRAM 000039
turnLeft@mL                      cstackBANK0  000060
turnLeft@mR                      cstackBANK0  000062
turnRight@mL                     cstackBANK0  000060
turnRight@mR                     cstackBANK0  000062


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 41 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  MoveTime      100  100[BANK1 ] unsigned char [100]
  MoveType      100    0[BANK1 ] unsigned char [100]
  Message        10  200[BANK1 ] unsigned char [10]
  mR              9  224[BANK1 ] struct DC_motor
  mL              9  215[BANK1 ] struct DC_motor
  i               1  214[BANK1 ] unsigned char 
  DirectionFou    1  213[BANK1 ] char 
  Move            1  212[BANK1 ] unsigned char 
  mode            1  211[BANK1 ] unsigned char 
  ScanAngle       1  210[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0     233       0
      Temps:          0       2       0       0
      Totals:         0       2     233       0
Total ram usage:      235 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_ScanIR
		_ScanWithRange
		_VerifySignal
		_delay_s
		_delay_tenth_s
		_enableSensor
		_fullSpeedAhead
		_fullSpeedBack
		_initIR
		_initLCD
		_initMotorPWM
		_initRFID
		_stop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initRFID *****************
 Defined at:
		line 5 in file "RFID_Reader.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initMotorPWM *****************
 Defined at:
		line 4 in file "dc_motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initLCD *****************
 Defined at:
		line 38 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   32[None  ] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDout
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SendLCD *****************
 Defined at:
		line 27 in file "LCD.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1   35[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1   36[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDout
 This function is called by:
		_initLCD
		_SetLine
		_LCD_String
 This function uses a non-reentrant model


 *************** function _LCDout *****************
 Defined at:
		line 14 in file "LCD.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1   34[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          3       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_E_TOG
 This function is called by:
		_SendLCD
		_initLCD
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 5 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_LCDout
 This function uses a non-reentrant model


 *************** function _initIR *****************
 Defined at:
		line 30 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedBack *****************
 Defined at:
		line 125 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    0[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    2[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _enableSensor *****************
 Defined at:
		line 106 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
  sensor          1    wreg     unsigned char 
  status          1   31[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  sensor          1   32[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _delay_s *****************
 Defined at:
		line 19 in file "Movement.c"
 Parameters:    Size  Location     Type
  seconds         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  seconds         1   32[COMRAM] unsigned char 
  i               2   33[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _VerifySignal *****************
 Defined at:
		line 55 in file "RFID_Reader.c"
 Parameters:    Size  Location     Type
  Signal          2   31[COMRAM] PTR unsigned char 
		 -> ReceivedString(16), 
 Auto vars:     Size  Location     Type
  hexByte         2   40[COMRAM] unsigned int 
  i               1   42[COMRAM] unsigned char 
  checksum        1   39[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         4       0       0       0
      Temps:          6       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ScanWithRange *****************
 Defined at:
		line 106 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2    4[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    6[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  tenth_second    1    8[BANK0 ] unsigned char 
  MoveTime        2    9[BANK0 ] PTR unsigned char 
		 -> main@MoveTime(100), 
 Auto vars:     Size  Location     Type
  SensorResult    4   22[BANK0 ] unsigned int [2]
  SensorResult    4   18[BANK0 ] unsigned int [2]
  SensorResult    4   14[BANK0 ] unsigned int [2]
  ResultFalseR    1   13[BANK0 ] unsigned char 
  ResultFalseC    1   12[BANK0 ] unsigned char 
  ResultFalseL    1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       7       0       0
      Locals:         0      15       0       0
      Temps:          2       0       0       0
      Totals:         2      22       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awdiv
		_delay_tenth_s
		_grabLeftIR
		_grabRightIR
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ScanIR *****************
 Defined at:
		line 41 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2    4[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    6[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
  SensorResult    4    8[BANK0 ] unsigned int [2]
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          2       0       0       0
      Totals:         2       8       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_delay_tenth_s
		_grabLeftIR
		_grabRightIR
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 98 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    0[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    2[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_fullSpeedAhead
		_stop
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 87 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    0[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    2[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_fullSpeedAhead
		_stop
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 67 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   54[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   56[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
		_turnLeft
		_turnRight
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _fullSpeedAhead *****************
 Defined at:
		line 108 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   54[COMRAM] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   56[COMRAM] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
		_turnLeft
		_turnRight
		_fullSpeedBack
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 26 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  m               2   45[COMRAM] PTR struct DC_motor
		 -> main@mR(9), main@mL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   52[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          5       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_fullSpeedAhead
		_setMotorFullSpeed
		_stopMotor
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   31[COMRAM] unsigned int 
  multiplicand    2   33[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   35[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   31[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   37[COMRAM] int 
  divisor         2   39[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   43[COMRAM] int 
  sign            1   42[COMRAM] unsigned char 
  counter         1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   37[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _grabRightIR *****************
 Defined at:
		line 74 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2   36[COMRAM] unsigned int 
  i               1   38[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   31[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _grabLeftIR *****************
 Defined at:
		line 90 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2   36[COMRAM] unsigned int 
  i               1   38[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   31[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _delay_tenth_s *****************
 Defined at:
		line 28 in file "Movement.c"
 Parameters:    Size  Location     Type
  tenth_second    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  tenth_second    1   32[COMRAM] unsigned char 
  i               2   33[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_ScanIR
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _InterruptHandlerLow *****************
 Defined at:
		line 18 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         17       0       0       0
      Totals:        17       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 34 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         14       0       0       0
      Totals:        14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c
		___awdiv       		CODE           	13E0	0000	133

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c estimated size: 133

dc_motor.c
		_fullSpeedBack 		CODE           	16CA	0000	59
		_fullSpeedAhead		CODE           	15BE	0000	113
		_turnLeft      		CODE           	167C	0000	79
		_stop          		CODE           	1350	0000	145
		_turnRight     		CODE           	162E	0000	79
		_initMotorPWM  		CODE           	1774	0000	51
		_setMotorPWM   		CODE           	0FE6	0000	309

dc_motor.c estimated size: 835

IR_Reading.c
		_grabLeftIR    		CODE           	154C	0000	115
		_grabRightIR   		CODE           	14DA	0000	115
		_enableSensor  		CODE           	1800	0000	39
		_initIR        		CODE           	184C	0000	35

IR_Reading.c estimated size: 304

shared
		_ClearSignalThreshold		SMALLCONST     	0301	0000	3
		_DirectionFoundThreshold		SMALLCONST     	0303	0000	3
		__initialization		CODE           	17D6	0000	29
		_DirectionFoundTolerance		SMALLCONST     	0305	0000	3

shared estimated size: 38

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c
		___wmul        		CODE           	1826	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c estimated size: 39

RFID_Reader.c
		_VerifySignal  		CODE           	129C	0000	181
		_initRFID      		CODE           	186E	0000	29

RFID_Reader.c estimated size: 210

main.c
		_main          		CODE           	09FE	0000	905
		_InterruptHandlerLow		CODE           	0018	0000	191
		_InterruptHandlerHigh		CODE           	0008	0000	133

main.c estimated size: 1229

Movement.c
		_ScanIR        		CODE           	0D86	0000	609
		_delay_tenth_s 		CODE           	173C	0000	57
		_ScanWithRange 		CODE           	0308	0000	1783
		_delay_s       		CODE           	1704	0000	57

Movement.c estimated size: 2506

LCD.c
		_SendLCD       		CODE           	17A6	0000	49
		_E_TOG         		CODE           	188A	0000	15
		_LCDout        		CODE           	111A	0000	199
		_initLCD       		CODE           	11E0	0000	189

LCD.c estimated size: 452

